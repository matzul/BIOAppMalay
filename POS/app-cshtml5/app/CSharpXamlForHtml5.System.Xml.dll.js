/* Generated by JSIL v0.8.2 build 30747. See http://jsil.org/ for more information. */ 
'use strict';
var $asm_CSharpXamlForHtml5_System_Xml_dll = JSIL.DeclareAssembly("CSharpXamlForHtml5.System.Xml.dll, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null");

/* class INTERNAL_DateTimeHelpers */ 

(function INTERNAL_DateTimeHelpers$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm_mscorlib.System.DateTime)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm_mscorlib.System.TimeSpan)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm_mscorlib.System.String)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm_mscorlib.System.Int64)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm_mscorlib.System.Int32)) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize(System.Array.Of($asm_mscorlib.System.String))) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize($asm_mscorlib.System.DateTimeKind)) ();
  };
  var $T07 = function () {
    return ($T07 = JSIL.Memoize($asm_mscorlib.System.Math)) ();
  };
  var $T08 = function () {
    return ($T08 = JSIL.Memoize($asm_mscorlib.System.Char)) ();
  };
  var $T09 = function () {
    return ($T09 = JSIL.Memoize(System.Array.Of($asm_mscorlib.System.Char))) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.MethodSignature($asm_mscorlib.TypeRef("System.TimeSpan"), [$asm_mscorlib.TypeRef("System.DateTime"), $asm_mscorlib.TypeRef("System.DateTime")]))) ();
  };
  var $S01 = function () {
    return ($S01 = JSIL.Memoize(new JSIL.ConstructorSignature($asm_mscorlib.TypeRef("System.TimeSpan"), [
        $asm_mscorlib.TypeRef("System.Int32"), $asm_mscorlib.TypeRef("System.Int32"), 
        $asm_mscorlib.TypeRef("System.Int32")
      ]))) ();
  };
  var $S02 = function () {
    return ($S02 = JSIL.Memoize(new JSIL.ConstructorSignature($asm_mscorlib.TypeRef("System.DateTime"), [
        $asm_mscorlib.TypeRef("System.Int32"), $asm_mscorlib.TypeRef("System.Int32"), 
        $asm_mscorlib.TypeRef("System.Int32"), $asm_mscorlib.TypeRef("System.Int32"), 
        $asm_mscorlib.TypeRef("System.Int32"), $asm_mscorlib.TypeRef("System.Int32"), 
        $asm_mscorlib.TypeRef("System.DateTimeKind")
      ]))) ();
  };

  function INTERNAL_DateTimeHelpers_FromDateTime (value) {
    var t = $S00().CallStatic($T00(), "op_Subtraction", null, value, value['get_Date']())['MemberwiseClone']();
    t = $T01()['op_Subtraction'](t, $S01().Construct(value['get_Hour'](), value['get_Minute'](), value['get_Second']()))['MemberwiseClone']();
    var text = (
      $T03()['op_GreaterThan'](
        t['get_Ticks'](), 
        $T03()['Create'](1000000, 0, 0)
      )
         ? (t['get_Ticks']()).toString()
         : JSIL.ConcatString("0", t['get_Ticks']()))
    ;
    if (System.String.EndsWith(text, "0000")) {
      text = (text.substr(0, (((text.length | 0) - 4) | 0)));
    }
    var text2 = (String(value['get_Second']()));
    if ((text2.length | 0) === 1) {
      text2 = (JSIL.ConcatString(0, text2));
    }
    var text3 = (String(value['get_Minute']()));
    if ((text3.length | 0) === 1) {
      text3 = (JSIL.ConcatString(0, text3));
    }
    var text4 = (String(value['get_Hour']()));
    if ((text4.length | 0) === 1) {
      text4 = (JSIL.ConcatString(0, text4));
    }
    var text5 = (String(value['get_Day']()));
    if ((text5.length | 0) === 1) {
      text5 = (JSIL.ConcatString(0, text5));
    }
    var text6 = (String(value['get_Month']()));
    if ((text6.length | 0) === 1) {
      text6 = (JSIL.ConcatString(0, text6));
    }

    for (var text7 = (String(value['get_Year']())); (text7.length | 0) < 4; text7 = (JSIL.ConcatString(0, text7))) {
    }
    var text8 = (JSIL.ConcatString.apply(null, JSIL.Array.New($T02(), [text7, "-", text6, "-", text5, "T", text4, ":", text3, ":", text2])));
    if (!$T03()['op_Equality'](
        t['get_Ticks'](), 
        $T03()['Create'](0, 0, 0)
      )) {
      text8 = ((text8 + "." + text));
    }
    if (value['get_Kind']() === $T06().Local) {
      var timeSpan = $S00().CallStatic($T00(), "op_Subtraction", null, value, value['ToUniversalTime']())['MemberwiseClone']();
      var text9 = (String(timeSpan['get_Minutes']()));
      if ((text9.length | 0) === 1) {
        text9 = (JSIL.ConcatString(0, text9));
      }
      var text10 = (String(Math.abs(timeSpan['get_Hours']())));
      if ((text10.length | 0) === 1) {
        text10 = (JSIL.ConcatString(0, text10));
      }
      var str = ((text10 + ":" + text9));
      if (!$T03()['op_LessThan'](
          timeSpan['get_Ticks'](), 
          $T03()['Create'](0, 0, 0)
        )) {
        str = (JSIL.ConcatString("+", str));
      } else {
        str = (JSIL.ConcatString("-", str));
      }
      text8 = (JSIL.ConcatString(text8, str));
    } else if (value['get_Kind']() === $T06().Utc) {
      text8 = (JSIL.ConcatString(text8, "Z"));
    }
    return text8;
  };

  function INTERNAL_DateTimeHelpers_ToDateTime (dateTimeAsString) {
    var kind = $T06().Unspecified;
    var array = (JSIL.SplitString(dateTimeAsString, JSIL.Array.New($T08(), ["T"])));
    var text = array[0];
    var array2 = (JSIL.SplitString(text, JSIL.Array.New($T08(), ["-"])));
    var year = ($T04()['Parse'](array2[0]) | 0);
    var month = ($T04()['Parse'](array2[1]) | 0);
    var day = ($T04()['Parse'](array2[2]) | 0);
    var text2 = array[1];
    var separator = JSIL.Array.New($T08(), ["+", "-"]);
    var array3 = (JSIL.SplitString(text2, separator));
    var separator2 = JSIL.Array.New($T08(), [":", "."]);
    var array4 = (JSIL.SplitString(array3[0], separator2));
    var num = ($T04()['Parse'](array4[0]) | 0);
    var num2 = ($T04()['Parse'](array4[1]) | 0);
    var text3 = array4[2];
    if (System.String.EndsWith(text3, "Z")) {
      kind = $T06().Utc;
      text3 = (text3.substr(0, (((text3.length | 0) - 1) | 0)));
    }
    var second = ($T04()['Parse'](text3) | 0);
    if ((array3.length | 0) >= 2) {
      if ((text2.indexOf("+") != -1)) {
        var c = "+";
      } else {
        c = "-";
      }
      var array5 = (JSIL.SplitString(array3[1], JSIL.Array.New($T08(), [":"])));
      var num3 = ($T04()['Parse'](JSIL.ConcatString(c, array5[0])) | 0);
      var num4 = ($T04()['Parse'](array5[1]) | 0);
      num = ((num - num3) | 0);
      num2 = ((num2 - num4) | 0);
      var now = $T00()['get_Now']()['MemberwiseClone']();
      var timeSpan = $S00().CallStatic($T00(), "op_Subtraction", null, now, now['ToUniversalTime']());
      num = ((num + (timeSpan['get_Hours']() | 0)) | 0);
      num2 = ((num2 + (timeSpan['get_Minutes']() | 0)) | 0);
      kind = $T06().Local;
    }
    var result = $S02().Construct(year, month, day, num, num2, second, kind);
    return result;
  };

  JSIL.MakeStaticClass("INTERNAL_DateTimeHelpers", false, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:true , Public:true }, "FromDateTime", 
      new JSIL.MethodSignature($.String, [$asm_mscorlib.TypeRef("System.DateTime")]), 
      INTERNAL_DateTimeHelpers_FromDateTime
    );

    $.Method({Static:true , Public:true }, "ToDateTime", 
      new JSIL.MethodSignature($asm_mscorlib.TypeRef("System.DateTime"), [$.String]), 
      INTERNAL_DateTimeHelpers_ToDateTime
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class INTERNAL_EscapeHelpers */ 

(function INTERNAL_EscapeHelpers$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm_mscorlib.System.String)) ();
  };

  function INTERNAL_EscapeHelpers__ctor () {
  };

  function INTERNAL_EscapeHelpers_EscapeXml (str) {
    return $T00().$Cast(            str.replace(/&/g, '&amp;')
                     .replace(/</g, '&lt;')
                     .replace(/>/g, '&gt;')
                     .replace(/"/g, '&quot;')
                     .replace(/'/g, '&apos;'));
  };

  function INTERNAL_EscapeHelpers_UnescapeXml (str) {
    return $T00().$Cast(            str.replace(/&apos;/g, "'")
                     .replace(/&quot;/g, '"')
                     .replace(/&gt;/g, '>')
                     .replace(/&lt;/g, '<')
                     .replace(/&amp;/g, '&'));
  };

  JSIL.MakeType({
      BaseType: $asm_mscorlib.TypeRef("System.Object"), 
      Name: "INTERNAL_EscapeHelpers", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      INTERNAL_EscapeHelpers__ctor
    );

    $.Method({Static:true , Public:true }, "EscapeXml", 
      new JSIL.MethodSignature($.String, [$.String]), 
      INTERNAL_EscapeHelpers_EscapeXml
    );

    $.Method({Static:true , Public:true }, "UnescapeXml", 
      new JSIL.MethodSignature($.String, [$.String]), 
      INTERNAL_EscapeHelpers_UnescapeXml
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

JSIL.DeclareNamespace("System");
JSIL.DeclareNamespace("System.Xml");
JSIL.DeclareNamespace("System.Xml.Serialization");
/* interface System.Xml.Serialization.IXmlSerializable */ 

JSIL.MakeInterface(
  "System.Xml.Serialization.IXmlSerializable", true, [], function ($) {
    $.Method({}, "ReadXml", JSIL.MethodSignature.Action($asm_CSharpXamlForHtml5_System_Xml_dll.TypeRef("System.Xml.XmlReader")));
  }, []);

JSIL.DeclareNamespace("System.Xml.Schema");
/* enum System.Xml.Schema.XmlSchemaForm */ 

JSIL.MakeEnum(
  {
    FullName: "System.Xml.Schema.XmlSchemaForm", 
    BaseType: $asm_mscorlib.TypeRef("System.Int32"), 
    IsPublic: true, 
    IsFlags: false, 
  }, 
  {
    None: 0, 
    Qualified: 1, 
    Unqualified: 2, 
  }
);

/* class System.Xml.Serialization.XmlIncludeAttribute */ 

(function XmlIncludeAttribute$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm_mscorlib.System.Type)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm_mscorlib.System.Attribute)) ();
  };

  function XmlIncludeAttribute__ctor (type) {
    $T01().prototype['_ctor'].call(this);
    this.type = type;
  };

  function XmlIncludeAttribute_get_Type () {
    return this.type;
  };

  function XmlIncludeAttribute_set_Type (value) {
    this.type = value;
  };

  JSIL.MakeType({
      BaseType: $asm_mscorlib.TypeRef("System.Attribute"), 
      Name: "System.Xml.Serialization.XmlIncludeAttribute", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm_mscorlib.TypeRef("System.Type")), 
      XmlIncludeAttribute__ctor
    );

    $.Method({Static:false, Public:true }, "get_Type", 
      JSIL.MethodSignature.Return($asm_mscorlib.TypeRef("System.Type")), 
      XmlIncludeAttribute_get_Type
    );

    $.Method({Static:false, Public:true }, "set_Type", 
      JSIL.MethodSignature.Action($asm_mscorlib.TypeRef("System.Type")), 
      XmlIncludeAttribute_set_Type
    );

    $['Field']({Static:false, Public:false}, "type", $asm_mscorlib.TypeRef("System.Type")); 
    $.Property({Static:false, Public:true }, "Type", $asm_mscorlib.TypeRef("System.Type"));

    $.ImplementInterfaces(
    );

    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm_mscorlib.TypeRef("System.AttributeUsageAttribute"), function () { return [$asm_mscorlib.System.AttributeTargets.$Flags("Class", "Interface", "Method", "Struct")]; });

})();

/* class System.Xml.Serialization.XmlTypeAttribute */ 

(function XmlTypeAttribute$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm_mscorlib.System.Attribute)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm_mscorlib.System.String)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm_mscorlib.System.Boolean)) ();
  };

  function XmlTypeAttribute__ctor$00 () {
    this.includeInSchema = true;
    $T00().prototype['_ctor'].call(this);
  };

  function XmlTypeAttribute__ctor$01 (typeName) {
    this.includeInSchema = true;
    $T00().prototype['_ctor'].call(this);
    this.typeName = typeName;
  };

  function XmlTypeAttribute_get_AnonymousType () {
    return this.anonymousType;
  };

  function XmlTypeAttribute_get_IncludeInSchema () {
    return this.includeInSchema;
  };

  function XmlTypeAttribute_get_Namespace () {
    return this.ns;
  };

  function XmlTypeAttribute_get_TypeName () {
    return (
      (this.typeName === null)
         ? $T01().Empty
         : this.typeName)
    ;
  };

  function XmlTypeAttribute_set_AnonymousType (value) {
    this.anonymousType = value;
  };

  function XmlTypeAttribute_set_IncludeInSchema (value) {
    this.includeInSchema = value;
  };

  function XmlTypeAttribute_set_Namespace (value) {
    this.ns = value;
  };

  function XmlTypeAttribute_set_TypeName (value) {
    this.typeName = value;
  };

  JSIL.MakeType({
      BaseType: $asm_mscorlib.TypeRef("System.Attribute"), 
      Name: "System.Xml.Serialization.XmlTypeAttribute", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      XmlTypeAttribute__ctor$00
    );

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.String), 
      XmlTypeAttribute__ctor$01
    );

    $.Method({Static:false, Public:true }, "get_AnonymousType", 
      JSIL.MethodSignature.Return($.Boolean), 
      XmlTypeAttribute_get_AnonymousType
    );

    $.Method({Static:false, Public:true }, "get_IncludeInSchema", 
      JSIL.MethodSignature.Return($.Boolean), 
      XmlTypeAttribute_get_IncludeInSchema
    );

    $.Method({Static:false, Public:true }, "get_Namespace", 
      JSIL.MethodSignature.Return($.String), 
      XmlTypeAttribute_get_Namespace
    );

    $.Method({Static:false, Public:true }, "get_TypeName", 
      JSIL.MethodSignature.Return($.String), 
      XmlTypeAttribute_get_TypeName
    );

    $.Method({Static:false, Public:true }, "set_AnonymousType", 
      JSIL.MethodSignature.Action($.Boolean), 
      XmlTypeAttribute_set_AnonymousType
    );

    $.Method({Static:false, Public:true }, "set_IncludeInSchema", 
      JSIL.MethodSignature.Action($.Boolean), 
      XmlTypeAttribute_set_IncludeInSchema
    );

    $.Method({Static:false, Public:true }, "set_Namespace", 
      JSIL.MethodSignature.Action($.String), 
      XmlTypeAttribute_set_Namespace
    );

    $.Method({Static:false, Public:true }, "set_TypeName", 
      JSIL.MethodSignature.Action($.String), 
      XmlTypeAttribute_set_TypeName
    );

    $['Field']({Static:false, Public:false}, "includeInSchema", $.Boolean); 
    $['Field']({Static:false, Public:false}, "anonymousType", $.Boolean); 
    $['Field']({Static:false, Public:false}, "ns", $.String); 
    $['Field']({Static:false, Public:false}, "typeName", $.String); 
    $.Property({Static:false, Public:true }, "AnonymousType", $.Boolean);

    $.Property({Static:false, Public:true }, "IncludeInSchema", $.Boolean);

    $.Property({Static:false, Public:true }, "TypeName", $.String);

    $.Property({Static:false, Public:true }, "Namespace", $.String);

    $.ImplementInterfaces(
    );

    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm_mscorlib.TypeRef("System.AttributeUsageAttribute"), function () { return [$asm_mscorlib.System.AttributeTargets.$Flags("Class", "Enum", "Interface", "Struct")]; });

})();

/* class System.Xml.Serialization.XmlIgnoreAttribute */ 

(function XmlIgnoreAttribute$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm_mscorlib.System.Attribute)) ();
  };

  function XmlIgnoreAttribute__ctor () {
    $T00().prototype['_ctor'].call(this);
  };

  JSIL.MakeType({
      BaseType: $asm_mscorlib.TypeRef("System.Attribute"), 
      Name: "System.Xml.Serialization.XmlIgnoreAttribute", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      XmlIgnoreAttribute__ctor
    );

    $.ImplementInterfaces(
    );

    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm_mscorlib.TypeRef("System.AttributeUsageAttribute"), function () { return [$asm_mscorlib.System.AttributeTargets.$Flags("Field", "Parameter", "Property", "ReturnValue")]; });

})();

/* class System.Xml.Serialization.XmlArrayAttribute */ 

(function XmlArrayAttribute$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm_CSharpXamlForHtml5_System_Xml_dll.System.Xml.Schema.XmlSchemaForm)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm_mscorlib.System.Attribute)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm_mscorlib.System.String)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm_mscorlib.System.Boolean)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm_mscorlib.System.Int32)) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm_mscorlib.System.ArgumentException)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.ConstructorSignature($asm_mscorlib.TypeRef("System.ArgumentException"), [$asm_mscorlib.TypeRef("System.String")]))) ();
  };

  function XmlArrayAttribute__ctor$00 () {
    this.form = $T00().None;
    this.order = -1;
    $T01().prototype['_ctor'].call(this);
  };

  function XmlArrayAttribute__ctor$01 (elementName) {
    this.form = $T00().None;
    this.order = -1;
    $T01().prototype['_ctor'].call(this);
    this.elementName = elementName;
  };

  function XmlArrayAttribute_get_ElementName () {
    return (
      (this.elementName === null)
         ? $T02().Empty
         : this.elementName)
    ;
  };

  function XmlArrayAttribute_get_Form () {
    return this.form;
  };

  function XmlArrayAttribute_get_IsNullable () {
    return this.nullable;
  };

  function XmlArrayAttribute_get_Namespace () {
    return this.ns;
  };

  function XmlArrayAttribute_get_Order () {
    return this.order;
  };

  function XmlArrayAttribute_set_ElementName (value) {
    this.elementName = value;
  };

  function XmlArrayAttribute_set_Form (value) {
    this.form = value;
  };

  function XmlArrayAttribute_set_IsNullable (value) {
    this.nullable = value;
  };

  function XmlArrayAttribute_set_Namespace (value) {
    this.ns = value;
  };

  function XmlArrayAttribute_set_Order (value) {
    if ((value | 0) < 0) {
      throw $S00().Construct("Order cannot be negative.");
    }
    this.order = (value | 0);
  };

  JSIL.MakeType({
      BaseType: $asm_mscorlib.TypeRef("System.Attribute"), 
      Name: "System.Xml.Serialization.XmlArrayAttribute", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      XmlArrayAttribute__ctor$00
    );

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.String), 
      XmlArrayAttribute__ctor$01
    );

    $.Method({Static:false, Public:true }, "get_ElementName", 
      JSIL.MethodSignature.Return($.String), 
      XmlArrayAttribute_get_ElementName
    );

    $.Method({Static:false, Public:true }, "get_Form", 
      JSIL.MethodSignature.Return($asm_CSharpXamlForHtml5_System_Xml_dll.TypeRef("System.Xml.Schema.XmlSchemaForm")), 
      XmlArrayAttribute_get_Form
    );

    $.Method({Static:false, Public:true }, "get_IsNullable", 
      JSIL.MethodSignature.Return($.Boolean), 
      XmlArrayAttribute_get_IsNullable
    );

    $.Method({Static:false, Public:true }, "get_Namespace", 
      JSIL.MethodSignature.Return($.String), 
      XmlArrayAttribute_get_Namespace
    );

    $.Method({Static:false, Public:true }, "get_Order", 
      JSIL.MethodSignature.Return($.Int32), 
      XmlArrayAttribute_get_Order
    );

    $.Method({Static:false, Public:true }, "set_ElementName", 
      JSIL.MethodSignature.Action($.String), 
      XmlArrayAttribute_set_ElementName
    );

    $.Method({Static:false, Public:true }, "set_Form", 
      JSIL.MethodSignature.Action($asm_CSharpXamlForHtml5_System_Xml_dll.TypeRef("System.Xml.Schema.XmlSchemaForm")), 
      XmlArrayAttribute_set_Form
    );

    $.Method({Static:false, Public:true }, "set_IsNullable", 
      JSIL.MethodSignature.Action($.Boolean), 
      XmlArrayAttribute_set_IsNullable
    );

    $.Method({Static:false, Public:true }, "set_Namespace", 
      JSIL.MethodSignature.Action($.String), 
      XmlArrayAttribute_set_Namespace
    );

    $.Method({Static:false, Public:true }, "set_Order", 
      JSIL.MethodSignature.Action($.Int32), 
      XmlArrayAttribute_set_Order
    );

    $['Field']({Static:false, Public:false}, "elementName", $.String); 
    $['Field']({Static:false, Public:false}, "ns", $.String); 
    $['Field']({Static:false, Public:false}, "nullable", $.Boolean); 
    $['Field']({Static:false, Public:false}, "form", $asm_CSharpXamlForHtml5_System_Xml_dll.TypeRef("System.Xml.Schema.XmlSchemaForm")); 
    $['Field']({Static:false, Public:false}, "order", $.Int32); 
    $.Property({Static:false, Public:true }, "ElementName", $.String);

    $.Property({Static:false, Public:true }, "Namespace", $.String);

    $.Property({Static:false, Public:true }, "IsNullable", $.Boolean);

    $.Property({Static:false, Public:true }, "Form", $asm_CSharpXamlForHtml5_System_Xml_dll.TypeRef("System.Xml.Schema.XmlSchemaForm"));

    $.Property({Static:false, Public:true }, "Order", $.Int32);

    $.ImplementInterfaces(
    );

    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm_mscorlib.TypeRef("System.AttributeUsageAttribute"), function () { return [$asm_mscorlib.System.AttributeTargets.$Flags("Field", "Parameter", "Property", "ReturnValue")]; });

})();

/* class System.Xml.Serialization.XmlEnumAttribute */ 

(function XmlEnumAttribute$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm_mscorlib.System.Attribute)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm_mscorlib.System.String)) ();
  };

  function XmlEnumAttribute__ctor$00 () {
    $T00().prototype['_ctor'].call(this);
  };

  function XmlEnumAttribute__ctor$01 (name) {
    $T00().prototype['_ctor'].call(this);
    this.$name = name;
  };

  function XmlEnumAttribute_get_Name () {
    return this.$name;
  };

  function XmlEnumAttribute_set_Name (value) {
    this.$name = value;
  };

  JSIL.MakeType({
      BaseType: $asm_mscorlib.TypeRef("System.Attribute"), 
      Name: "System.Xml.Serialization.XmlEnumAttribute", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      XmlEnumAttribute__ctor$00
    );

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.String), 
      XmlEnumAttribute__ctor$01
    );

    $.Method({Static:false, Public:true }, "get_Name", 
      JSIL.MethodSignature.Return($.String), 
      XmlEnumAttribute_get_Name
    );

    $.Method({Static:false, Public:true }, "set_Name", 
      JSIL.MethodSignature.Action($.String), 
      XmlEnumAttribute_set_Name
    );

    $['Field']({Static:false, Public:false}, "$name", $.String); 
    $.Property({Static:false, Public:true }, "Name", $.String);

    $.ImplementInterfaces(
    );

    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm_mscorlib.TypeRef("System.AttributeUsageAttribute"), function () { return [$asm_mscorlib.System.AttributeTargets.Field]; });

})();

/* class System.Xml.Serialization.XmlArrayItemAttribute */ 

(function XmlArrayItemAttribute$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm_CSharpXamlForHtml5_System_Xml_dll.System.Xml.Schema.XmlSchemaForm)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm_mscorlib.System.Attribute)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm_mscorlib.System.String)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm_mscorlib.System.Type)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm_mscorlib.System.Boolean)) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm_mscorlib.System.Int32)) ();
  };

  function XmlArrayItemAttribute__ctor$00 () {
    this.nullableSpecified = false;
    this.form = $T00().None;
    $T01().prototype['_ctor'].call(this);
  };

  function XmlArrayItemAttribute__ctor$01 (elementName) {
    this.nullableSpecified = false;
    this.form = $T00().None;
    $T01().prototype['_ctor'].call(this);
    this.elementName = elementName;
  };

  function XmlArrayItemAttribute__ctor$02 (type) {
    this.nullableSpecified = false;
    this.form = $T00().None;
    $T01().prototype['_ctor'].call(this);
    this.type = type;
  };

  function XmlArrayItemAttribute__ctor$03 (elementName, type) {
    this.nullableSpecified = false;
    this.form = $T00().None;
    $T01().prototype['_ctor'].call(this);
    this.elementName = elementName;
    this.type = type;
  };

  function XmlArrayItemAttribute_get_DataType () {
    return (
      (this.dataType === null)
         ? $T02().Empty
         : this.dataType)
    ;
  };

  function XmlArrayItemAttribute_get_ElementName () {
    return (
      (this.elementName === null)
         ? $T02().Empty
         : this.elementName)
    ;
  };

  function XmlArrayItemAttribute_get_Form () {
    return this.form;
  };

  function XmlArrayItemAttribute_get_IsNullable () {
    return this.nullable;
  };

  function XmlArrayItemAttribute_get_IsNullableSpecified () {
    return this.nullableSpecified;
  };

  function XmlArrayItemAttribute_get_Namespace () {
    return this.ns;
  };

  function XmlArrayItemAttribute_get_NestingLevel () {
    return this.nestingLevel;
  };

  function XmlArrayItemAttribute_get_Type () {
    return this.type;
  };

  function XmlArrayItemAttribute_set_DataType (value) {
    this.dataType = value;
  };

  function XmlArrayItemAttribute_set_ElementName (value) {
    this.elementName = value;
  };

  function XmlArrayItemAttribute_set_Form (value) {
    this.form = value;
  };

  function XmlArrayItemAttribute_set_IsNullable (value) {
    this.nullable = value;
    this.nullableSpecified = true;
  };

  function XmlArrayItemAttribute_set_Namespace (value) {
    this.ns = value;
  };

  function XmlArrayItemAttribute_set_NestingLevel (value) {
    this.nestingLevel = (value | 0);
  };

  function XmlArrayItemAttribute_set_Type (value) {
    this.type = value;
  };

  JSIL.MakeType({
      BaseType: $asm_mscorlib.TypeRef("System.Attribute"), 
      Name: "System.Xml.Serialization.XmlArrayItemAttribute", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      XmlArrayItemAttribute__ctor$00
    );

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.String), 
      XmlArrayItemAttribute__ctor$01
    );

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm_mscorlib.TypeRef("System.Type")), 
      XmlArrayItemAttribute__ctor$02
    );

    $.Method({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$.String, $asm_mscorlib.TypeRef("System.Type")]), 
      XmlArrayItemAttribute__ctor$03
    );

    $.Method({Static:false, Public:true }, "get_DataType", 
      JSIL.MethodSignature.Return($.String), 
      XmlArrayItemAttribute_get_DataType
    );

    $.Method({Static:false, Public:true }, "get_ElementName", 
      JSIL.MethodSignature.Return($.String), 
      XmlArrayItemAttribute_get_ElementName
    );

    $.Method({Static:false, Public:true }, "get_Form", 
      JSIL.MethodSignature.Return($asm_CSharpXamlForHtml5_System_Xml_dll.TypeRef("System.Xml.Schema.XmlSchemaForm")), 
      XmlArrayItemAttribute_get_Form
    );

    $.Method({Static:false, Public:true }, "get_IsNullable", 
      JSIL.MethodSignature.Return($.Boolean), 
      XmlArrayItemAttribute_get_IsNullable
    );

    $.Method({Static:false, Public:false}, "get_IsNullableSpecified", 
      JSIL.MethodSignature.Return($.Boolean), 
      XmlArrayItemAttribute_get_IsNullableSpecified
    );

    $.Method({Static:false, Public:true }, "get_Namespace", 
      JSIL.MethodSignature.Return($.String), 
      XmlArrayItemAttribute_get_Namespace
    );

    $.Method({Static:false, Public:true }, "get_NestingLevel", 
      JSIL.MethodSignature.Return($.Int32), 
      XmlArrayItemAttribute_get_NestingLevel
    );

    $.Method({Static:false, Public:true }, "get_Type", 
      JSIL.MethodSignature.Return($asm_mscorlib.TypeRef("System.Type")), 
      XmlArrayItemAttribute_get_Type
    );

    $.Method({Static:false, Public:true }, "set_DataType", 
      JSIL.MethodSignature.Action($.String), 
      XmlArrayItemAttribute_set_DataType
    );

    $.Method({Static:false, Public:true }, "set_ElementName", 
      JSIL.MethodSignature.Action($.String), 
      XmlArrayItemAttribute_set_ElementName
    );

    $.Method({Static:false, Public:true }, "set_Form", 
      JSIL.MethodSignature.Action($asm_CSharpXamlForHtml5_System_Xml_dll.TypeRef("System.Xml.Schema.XmlSchemaForm")), 
      XmlArrayItemAttribute_set_Form
    );

    $.Method({Static:false, Public:true }, "set_IsNullable", 
      JSIL.MethodSignature.Action($.Boolean), 
      XmlArrayItemAttribute_set_IsNullable
    );

    $.Method({Static:false, Public:true }, "set_Namespace", 
      JSIL.MethodSignature.Action($.String), 
      XmlArrayItemAttribute_set_Namespace
    );

    $.Method({Static:false, Public:true }, "set_NestingLevel", 
      JSIL.MethodSignature.Action($.Int32), 
      XmlArrayItemAttribute_set_NestingLevel
    );

    $.Method({Static:false, Public:true }, "set_Type", 
      JSIL.MethodSignature.Action($asm_mscorlib.TypeRef("System.Type")), 
      XmlArrayItemAttribute_set_Type
    );

    $['Field']({Static:false, Public:false}, "elementName", $.String); 
    $['Field']({Static:false, Public:false}, "type", $asm_mscorlib.TypeRef("System.Type")); 
    $['Field']({Static:false, Public:false}, "ns", $.String); 
    $['Field']({Static:false, Public:false}, "dataType", $.String); 
    $['Field']({Static:false, Public:false}, "nullable", $.Boolean); 
    $['Field']({Static:false, Public:false}, "nullableSpecified", $.Boolean); 
    $['Field']({Static:false, Public:false}, "form", $asm_CSharpXamlForHtml5_System_Xml_dll.TypeRef("System.Xml.Schema.XmlSchemaForm")); 
    $['Field']({Static:false, Public:false}, "nestingLevel", $.Int32); 
    $.Property({Static:false, Public:true }, "Type", $asm_mscorlib.TypeRef("System.Type"));

    $.Property({Static:false, Public:true }, "ElementName", $.String);

    $.Property({Static:false, Public:true }, "Namespace", $.String);

    $.Property({Static:false, Public:true }, "NestingLevel", $.Int32);

    $.Property({Static:false, Public:true }, "DataType", $.String);

    $.Property({Static:false, Public:true }, "IsNullable", $.Boolean);

    $.Property({Static:false, Public:false}, "IsNullableSpecified", $.Boolean);

    $.Property({Static:false, Public:true }, "Form", $asm_CSharpXamlForHtml5_System_Xml_dll.TypeRef("System.Xml.Schema.XmlSchemaForm"));

    $.ImplementInterfaces(
    );

    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm_mscorlib.TypeRef("System.AttributeUsageAttribute"), function () { return [$asm_mscorlib.System.AttributeTargets.$Flags("Field", "Parameter", "Property", "ReturnValue")]; });

})();

/* class System.Xml.Serialization.XmlRootAttribute */ 

(function XmlRootAttribute$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm_mscorlib.System.Attribute)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm_mscorlib.System.String)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm_mscorlib.System.Boolean)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize(System.Array.Of($asm_mscorlib.System.String))) ();
  };

  function XmlRootAttribute__ctor$00 () {
    this.nullable = true;
    $T00().prototype['_ctor'].call(this);
  };

  function XmlRootAttribute__ctor$01 (elementName) {
    this.nullable = true;
    $T00().prototype['_ctor'].call(this);
    this.elementName = elementName;
  };

  function XmlRootAttribute_get_DataType () {
    return (
      (this.dataType === null)
         ? $T01().Empty
         : this.dataType)
    ;
  };

  function XmlRootAttribute_get_ElementName () {
    return (
      (this.elementName === null)
         ? $T01().Empty
         : this.elementName)
    ;
  };

  function XmlRootAttribute_get_IsNullable () {
    return this.nullable;
  };

  function XmlRootAttribute_get_IsNullableSpecified () {
    return this.nullableSpecified;
  };

  function XmlRootAttribute_get_Key () {
    return JSIL.ConcatString.apply(null, JSIL.Array.New($T01(), [(
        (this.ns === null)
           ? $T01().Empty
           : this.ns)
      , ":", this['get_ElementName'](), ":", (this.nullable)['toString']()]));
  };

  function XmlRootAttribute_get_Namespace () {
    return this.ns;
  };

  function XmlRootAttribute_set_DataType (value) {
    this.dataType = value;
  };

  function XmlRootAttribute_set_ElementName (value) {
    this.elementName = value;
  };

  function XmlRootAttribute_set_IsNullable (value) {
    this.nullable = value;
    this.nullableSpecified = true;
  };

  function XmlRootAttribute_set_Namespace (value) {
    this.ns = value;
  };

  JSIL.MakeType({
      BaseType: $asm_mscorlib.TypeRef("System.Attribute"), 
      Name: "System.Xml.Serialization.XmlRootAttribute", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      XmlRootAttribute__ctor$00
    );

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.String), 
      XmlRootAttribute__ctor$01
    );

    $.Method({Static:false, Public:true }, "get_DataType", 
      JSIL.MethodSignature.Return($.String), 
      XmlRootAttribute_get_DataType
    );

    $.Method({Static:false, Public:true }, "get_ElementName", 
      JSIL.MethodSignature.Return($.String), 
      XmlRootAttribute_get_ElementName
    );

    $.Method({Static:false, Public:true }, "get_IsNullable", 
      JSIL.MethodSignature.Return($.Boolean), 
      XmlRootAttribute_get_IsNullable
    );

    $.Method({Static:false, Public:false}, "get_IsNullableSpecified", 
      JSIL.MethodSignature.Return($.Boolean), 
      XmlRootAttribute_get_IsNullableSpecified
    );

    $.Method({Static:false, Public:false}, "get_Key", 
      JSIL.MethodSignature.Return($.String), 
      XmlRootAttribute_get_Key
    );

    $.Method({Static:false, Public:true }, "get_Namespace", 
      JSIL.MethodSignature.Return($.String), 
      XmlRootAttribute_get_Namespace
    );

    $.Method({Static:false, Public:true }, "set_DataType", 
      JSIL.MethodSignature.Action($.String), 
      XmlRootAttribute_set_DataType
    );

    $.Method({Static:false, Public:true }, "set_ElementName", 
      JSIL.MethodSignature.Action($.String), 
      XmlRootAttribute_set_ElementName
    );

    $.Method({Static:false, Public:true }, "set_IsNullable", 
      JSIL.MethodSignature.Action($.Boolean), 
      XmlRootAttribute_set_IsNullable
    );

    $.Method({Static:false, Public:true }, "set_Namespace", 
      JSIL.MethodSignature.Action($.String), 
      XmlRootAttribute_set_Namespace
    );

    $['Field']({Static:false, Public:false}, "elementName", $.String); 
    $['Field']({Static:false, Public:false}, "ns", $.String); 
    $['Field']({Static:false, Public:false}, "dataType", $.String); 
    $['Field']({Static:false, Public:false}, "nullable", $.Boolean); 
    $['Field']({Static:false, Public:false}, "nullableSpecified", $.Boolean); 
    $.Property({Static:false, Public:true }, "ElementName", $.String);

    $.Property({Static:false, Public:true }, "Namespace", $.String);

    $.Property({Static:false, Public:true }, "DataType", $.String);

    $.Property({Static:false, Public:true }, "IsNullable", $.Boolean);

    $.Property({Static:false, Public:false}, "IsNullableSpecified", $.Boolean);

    $.Property({Static:false, Public:false}, "Key", $.String);

    $.ImplementInterfaces(
    );

    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm_mscorlib.TypeRef("System.AttributeUsageAttribute"), function () { return [$asm_mscorlib.System.AttributeTargets.$Flags(
          "Class", "Enum", "Interface", "ReturnValue", 
          "Struct"
      )]; });

})();

/* class System.Xml.Serialization.XmlAttributeAttribute */ 

(function XmlAttributeAttribute$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm_CSharpXamlForHtml5_System_Xml_dll.System.Xml.Schema.XmlSchemaForm)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm_mscorlib.System.Attribute)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm_mscorlib.System.String)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm_mscorlib.System.Type)) ();
  };

  function XmlAttributeAttribute__ctor$00 () {
    this.form = $T00().None;
    $T01().prototype['_ctor'].call(this);
  };

  function XmlAttributeAttribute__ctor$01 (attributeName) {
    this.form = $T00().None;
    $T01().prototype['_ctor'].call(this);
    this.attributeName = attributeName;
  };

  function XmlAttributeAttribute__ctor$02 (type) {
    this.form = $T00().None;
    $T01().prototype['_ctor'].call(this);
    this.type = type;
  };

  function XmlAttributeAttribute__ctor$03 (attributeName, type) {
    this.form = $T00().None;
    $T01().prototype['_ctor'].call(this);
    this.attributeName = attributeName;
    this.type = type;
  };

  function XmlAttributeAttribute_get_AttributeName () {
    return (
      (this.attributeName === null)
         ? $T02().Empty
         : this.attributeName)
    ;
  };

  function XmlAttributeAttribute_get_DataType () {
    return (
      (this.dataType === null)
         ? $T02().Empty
         : this.dataType)
    ;
  };

  function XmlAttributeAttribute_get_Form () {
    return this.form;
  };

  function XmlAttributeAttribute_get_Namespace () {
    return this.ns;
  };

  function XmlAttributeAttribute_get_Type () {
    return this.type;
  };

  function XmlAttributeAttribute_set_AttributeName (value) {
    this.attributeName = value;
  };

  function XmlAttributeAttribute_set_DataType (value) {
    this.dataType = value;
  };

  function XmlAttributeAttribute_set_Form (value) {
    this.form = value;
  };

  function XmlAttributeAttribute_set_Namespace (value) {
    this.ns = value;
  };

  function XmlAttributeAttribute_set_Type (value) {
    this.type = value;
  };

  JSIL.MakeType({
      BaseType: $asm_mscorlib.TypeRef("System.Attribute"), 
      Name: "System.Xml.Serialization.XmlAttributeAttribute", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      XmlAttributeAttribute__ctor$00
    );

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.String), 
      XmlAttributeAttribute__ctor$01
    );

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm_mscorlib.TypeRef("System.Type")), 
      XmlAttributeAttribute__ctor$02
    );

    $.Method({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$.String, $asm_mscorlib.TypeRef("System.Type")]), 
      XmlAttributeAttribute__ctor$03
    );

    $.Method({Static:false, Public:true }, "get_AttributeName", 
      JSIL.MethodSignature.Return($.String), 
      XmlAttributeAttribute_get_AttributeName
    );

    $.Method({Static:false, Public:true }, "get_DataType", 
      JSIL.MethodSignature.Return($.String), 
      XmlAttributeAttribute_get_DataType
    );

    $.Method({Static:false, Public:true }, "get_Form", 
      JSIL.MethodSignature.Return($asm_CSharpXamlForHtml5_System_Xml_dll.TypeRef("System.Xml.Schema.XmlSchemaForm")), 
      XmlAttributeAttribute_get_Form
    );

    $.Method({Static:false, Public:true }, "get_Namespace", 
      JSIL.MethodSignature.Return($.String), 
      XmlAttributeAttribute_get_Namespace
    );

    $.Method({Static:false, Public:true }, "get_Type", 
      JSIL.MethodSignature.Return($asm_mscorlib.TypeRef("System.Type")), 
      XmlAttributeAttribute_get_Type
    );

    $.Method({Static:false, Public:true }, "set_AttributeName", 
      JSIL.MethodSignature.Action($.String), 
      XmlAttributeAttribute_set_AttributeName
    );

    $.Method({Static:false, Public:true }, "set_DataType", 
      JSIL.MethodSignature.Action($.String), 
      XmlAttributeAttribute_set_DataType
    );

    $.Method({Static:false, Public:true }, "set_Form", 
      JSIL.MethodSignature.Action($asm_CSharpXamlForHtml5_System_Xml_dll.TypeRef("System.Xml.Schema.XmlSchemaForm")), 
      XmlAttributeAttribute_set_Form
    );

    $.Method({Static:false, Public:true }, "set_Namespace", 
      JSIL.MethodSignature.Action($.String), 
      XmlAttributeAttribute_set_Namespace
    );

    $.Method({Static:false, Public:true }, "set_Type", 
      JSIL.MethodSignature.Action($asm_mscorlib.TypeRef("System.Type")), 
      XmlAttributeAttribute_set_Type
    );

    $['Field']({Static:false, Public:false}, "attributeName", $.String); 
    $['Field']({Static:false, Public:false}, "type", $asm_mscorlib.TypeRef("System.Type")); 
    $['Field']({Static:false, Public:false}, "ns", $.String); 
    $['Field']({Static:false, Public:false}, "dataType", $.String); 
    $['Field']({Static:false, Public:false}, "form", $asm_CSharpXamlForHtml5_System_Xml_dll.TypeRef("System.Xml.Schema.XmlSchemaForm")); 
    $.Property({Static:false, Public:true }, "Type", $asm_mscorlib.TypeRef("System.Type"));

    $.Property({Static:false, Public:true }, "AttributeName", $.String);

    $.Property({Static:false, Public:true }, "Namespace", $.String);

    $.Property({Static:false, Public:true }, "DataType", $.String);

    $.Property({Static:false, Public:true }, "Form", $asm_CSharpXamlForHtml5_System_Xml_dll.TypeRef("System.Xml.Schema.XmlSchemaForm"));

    $.ImplementInterfaces(
    );

    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm_mscorlib.TypeRef("System.AttributeUsageAttribute"), function () { return [$asm_mscorlib.System.AttributeTargets.$Flags("Field", "Parameter", "Property", "ReturnValue")]; });

})();

/* class System.Xml.XmlConvert */ 

(function XmlConvert$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm_mscorlib.TypeRef("System.Object"), 
      Name: "System.Xml.XmlConvert", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:true , Public:false}, "Parse", 
      new JSIL.MethodSignature($.Double, [$.String])
    );

    $.ExternalMethod({Static:true , Public:true }, "ToBoolean", 
      new JSIL.MethodSignature($.Boolean, [$.String])
    );

    $.ExternalMethod({Static:true , Public:true }, "ToByte", 
      new JSIL.MethodSignature($.Byte, [$.String])
    );

    $.ExternalMethod({Static:true , Public:true }, "ToDecimal", 
      new JSIL.MethodSignature($asm_mscorlib.TypeRef("System.Decimal"), [$.String])
    );

    $.ExternalMethod({Static:true , Public:true }, "ToDouble", 
      new JSIL.MethodSignature($.Double, [$.String])
    );

    $.ExternalMethod({Static:true , Public:true }, "ToGuid", 
      new JSIL.MethodSignature($asm_mscorlib.TypeRef("System.Guid"), [$.String])
    );

    $.ExternalMethod({Static:true , Public:true }, "ToInt16", 
      new JSIL.MethodSignature($.Int16, [$.String])
    );

    $.ExternalMethod({Static:true , Public:true }, "ToInt32", 
      new JSIL.MethodSignature($.Int32, [$.String])
    );

    $.ExternalMethod({Static:true , Public:true }, "ToInt64", 
      new JSIL.MethodSignature($.Int64, [$.String])
    );

    $.ExternalMethod({Static:true , Public:true }, "ToSByte", 
      new JSIL.MethodSignature($.SByte, [$.String])
    );

    $.ExternalMethod({Static:true , Public:true }, "ToSingle", 
      new JSIL.MethodSignature($.Single, [$.String])
    );

    $.ExternalMethod({Static:true , Public:true }, "ToString", 
      new JSIL.MethodSignature($.String, [$.Boolean])
    );

    $.ExternalMethod({Static:true , Public:true }, "ToString", 
      new JSIL.MethodSignature($.String, [$.Byte])
    );

    $.ExternalMethod({Static:true , Public:true }, "ToString", 
      new JSIL.MethodSignature($.String, [$.Char])
    );

    $.ExternalMethod({Static:true , Public:true }, "ToString", 
      new JSIL.MethodSignature($.String, [$.Double])
    );

    $.ExternalMethod({Static:true , Public:true }, "ToString", 
      new JSIL.MethodSignature($.String, [$.Single])
    );

    $.ExternalMethod({Static:true , Public:true }, "ToString", 
      new JSIL.MethodSignature($.String, [$asm_mscorlib.TypeRef("System.Guid")])
    );

    $.ExternalMethod({Static:true , Public:true }, "ToString", 
      new JSIL.MethodSignature($.String, [$.Int32])
    );

    $.ExternalMethod({Static:true , Public:true }, "ToString", 
      new JSIL.MethodSignature($.String, [$.Int64])
    );

    $.ExternalMethod({Static:true , Public:true }, "ToString", 
      new JSIL.MethodSignature($.String, [$.SByte])
    );

    $.ExternalMethod({Static:true , Public:true }, "ToString", 
      new JSIL.MethodSignature($.String, [$.Int16])
    );

    $.ExternalMethod({Static:true , Public:true }, "ToString", 
      new JSIL.MethodSignature($.String, [$.UInt32])
    );

    $.ExternalMethod({Static:true , Public:true }, "ToString", 
      new JSIL.MethodSignature($.String, [$.UInt64])
    );

    $.ExternalMethod({Static:true , Public:true }, "ToString", 
      new JSIL.MethodSignature($.String, [$.UInt16])
    );

    $.ExternalMethod({Static:true , Public:true }, "ToUInt16", 
      new JSIL.MethodSignature($.UInt16, [$.String])
    );

    $.ExternalMethod({Static:true , Public:true }, "ToUInt32", 
      new JSIL.MethodSignature($.UInt32, [$.String])
    );

    $.ExternalMethod({Static:true , Public:true }, "ToUInt64", 
      new JSIL.MethodSignature($.UInt64, [$.String])
    );

    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm_JSIL_Meta.TypeRef("JSIL.Meta.JSStubOnly"));

})();

/* enum System.Xml.XmlDateTimeSerializationMode */ 

JSIL.MakeEnum(
  {
    FullName: "System.Xml.XmlDateTimeSerializationMode", 
    BaseType: $asm_mscorlib.TypeRef("System.Int32"), 
    IsPublic: true, 
    IsFlags: false, 
  }, 
  {
    Local: 0, 
    Utc: 1, 
    Unspecified: 2, 
    RoundtripKind: 3, 
  }
);

/* class System.Xml.Serialization.XmlElementAttribute */ 

(function XmlElementAttribute$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm_CSharpXamlForHtml5_System_Xml_dll.System.Xml.Schema.XmlSchemaForm)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm_mscorlib.System.Attribute)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm_mscorlib.System.String)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm_mscorlib.System.Type)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm_mscorlib.System.Boolean)) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm_mscorlib.System.Int32)) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize($asm_mscorlib.System.ArgumentException)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.ConstructorSignature($asm_mscorlib.TypeRef("System.ArgumentException"), [$asm_mscorlib.TypeRef("System.String")]))) ();
  };

  function XmlElementAttribute__ctor$00 () {
    this.form = $T00().None;
    this.order = -1;
    $T01().prototype['_ctor'].call(this);
  };

  function XmlElementAttribute__ctor$01 (elementName) {
    this.form = $T00().None;
    this.order = -1;
    $T01().prototype['_ctor'].call(this);
    this.elementName = elementName;
  };

  function XmlElementAttribute__ctor$02 (type) {
    this.form = $T00().None;
    this.order = -1;
    $T01().prototype['_ctor'].call(this);
    this.type = type;
  };

  function XmlElementAttribute__ctor$03 (elementName, type) {
    this.form = $T00().None;
    this.order = -1;
    $T01().prototype['_ctor'].call(this);
    this.elementName = elementName;
    this.type = type;
  };

  function XmlElementAttribute_get_DataType () {
    return (
      (this.dataType === null)
         ? $T02().Empty
         : this.dataType)
    ;
  };

  function XmlElementAttribute_get_ElementName () {
    return (
      (this.elementName === null)
         ? $T02().Empty
         : this.elementName)
    ;
  };

  function XmlElementAttribute_get_Form () {
    return this.form;
  };

  function XmlElementAttribute_get_IsNullable () {
    return this.nullable;
  };

  function XmlElementAttribute_get_IsNullableSpecified () {
    return this.nullableSpecified;
  };

  function XmlElementAttribute_get_Namespace () {
    return this.ns;
  };

  function XmlElementAttribute_get_Order () {
    return this.order;
  };

  function XmlElementAttribute_get_Type () {
    return this.type;
  };

  function XmlElementAttribute_set_DataType (value) {
    this.dataType = value;
  };

  function XmlElementAttribute_set_ElementName (value) {
    this.elementName = value;
  };

  function XmlElementAttribute_set_Form (value) {
    this.form = value;
  };

  function XmlElementAttribute_set_IsNullable (value) {
    this.nullable = value;
    this.nullableSpecified = true;
  };

  function XmlElementAttribute_set_Namespace (value) {
    this.ns = value;
  };

  function XmlElementAttribute_set_Order (value) {
    if ((value | 0) < 0) {
      throw $S00().Construct("Order cannot be negative.");
    }
    this.order = (value | 0);
  };

  function XmlElementAttribute_set_Type (value) {
    this.type = value;
  };

  JSIL.MakeType({
      BaseType: $asm_mscorlib.TypeRef("System.Attribute"), 
      Name: "System.Xml.Serialization.XmlElementAttribute", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      XmlElementAttribute__ctor$00
    );

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.String), 
      XmlElementAttribute__ctor$01
    );

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm_mscorlib.TypeRef("System.Type")), 
      XmlElementAttribute__ctor$02
    );

    $.Method({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$.String, $asm_mscorlib.TypeRef("System.Type")]), 
      XmlElementAttribute__ctor$03
    );

    $.Method({Static:false, Public:true }, "get_DataType", 
      JSIL.MethodSignature.Return($.String), 
      XmlElementAttribute_get_DataType
    );

    $.Method({Static:false, Public:true }, "get_ElementName", 
      JSIL.MethodSignature.Return($.String), 
      XmlElementAttribute_get_ElementName
    );

    $.Method({Static:false, Public:true }, "get_Form", 
      JSIL.MethodSignature.Return($asm_CSharpXamlForHtml5_System_Xml_dll.TypeRef("System.Xml.Schema.XmlSchemaForm")), 
      XmlElementAttribute_get_Form
    );

    $.Method({Static:false, Public:true }, "get_IsNullable", 
      JSIL.MethodSignature.Return($.Boolean), 
      XmlElementAttribute_get_IsNullable
    );

    $.Method({Static:false, Public:false}, "get_IsNullableSpecified", 
      JSIL.MethodSignature.Return($.Boolean), 
      XmlElementAttribute_get_IsNullableSpecified
    );

    $.Method({Static:false, Public:true }, "get_Namespace", 
      JSIL.MethodSignature.Return($.String), 
      XmlElementAttribute_get_Namespace
    );

    $.Method({Static:false, Public:true }, "get_Order", 
      JSIL.MethodSignature.Return($.Int32), 
      XmlElementAttribute_get_Order
    );

    $.Method({Static:false, Public:true }, "get_Type", 
      JSIL.MethodSignature.Return($asm_mscorlib.TypeRef("System.Type")), 
      XmlElementAttribute_get_Type
    );

    $.Method({Static:false, Public:true }, "set_DataType", 
      JSIL.MethodSignature.Action($.String), 
      XmlElementAttribute_set_DataType
    );

    $.Method({Static:false, Public:true }, "set_ElementName", 
      JSIL.MethodSignature.Action($.String), 
      XmlElementAttribute_set_ElementName
    );

    $.Method({Static:false, Public:true }, "set_Form", 
      JSIL.MethodSignature.Action($asm_CSharpXamlForHtml5_System_Xml_dll.TypeRef("System.Xml.Schema.XmlSchemaForm")), 
      XmlElementAttribute_set_Form
    );

    $.Method({Static:false, Public:true }, "set_IsNullable", 
      JSIL.MethodSignature.Action($.Boolean), 
      XmlElementAttribute_set_IsNullable
    );

    $.Method({Static:false, Public:true }, "set_Namespace", 
      JSIL.MethodSignature.Action($.String), 
      XmlElementAttribute_set_Namespace
    );

    $.Method({Static:false, Public:true }, "set_Order", 
      JSIL.MethodSignature.Action($.Int32), 
      XmlElementAttribute_set_Order
    );

    $.Method({Static:false, Public:true }, "set_Type", 
      JSIL.MethodSignature.Action($asm_mscorlib.TypeRef("System.Type")), 
      XmlElementAttribute_set_Type
    );

    $['Field']({Static:false, Public:false}, "elementName", $.String); 
    $['Field']({Static:false, Public:false}, "type", $asm_mscorlib.TypeRef("System.Type")); 
    $['Field']({Static:false, Public:false}, "ns", $.String); 
    $['Field']({Static:false, Public:false}, "dataType", $.String); 
    $['Field']({Static:false, Public:false}, "nullable", $.Boolean); 
    $['Field']({Static:false, Public:false}, "nullableSpecified", $.Boolean); 
    $['Field']({Static:false, Public:false}, "form", $asm_CSharpXamlForHtml5_System_Xml_dll.TypeRef("System.Xml.Schema.XmlSchemaForm")); 
    $['Field']({Static:false, Public:false}, "order", $.Int32); 
    $.Property({Static:false, Public:true }, "Type", $asm_mscorlib.TypeRef("System.Type"));

    $.Property({Static:false, Public:true }, "ElementName", $.String);

    $.Property({Static:false, Public:true }, "Namespace", $.String);

    $.Property({Static:false, Public:true }, "DataType", $.String);

    $.Property({Static:false, Public:true }, "IsNullable", $.Boolean);

    $.Property({Static:false, Public:false}, "IsNullableSpecified", $.Boolean);

    $.Property({Static:false, Public:true }, "Form", $asm_CSharpXamlForHtml5_System_Xml_dll.TypeRef("System.Xml.Schema.XmlSchemaForm"));

    $.Property({Static:false, Public:true }, "Order", $.Int32);

    $.ImplementInterfaces(
    );

    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm_mscorlib.TypeRef("System.AttributeUsageAttribute"), function () { return [$asm_mscorlib.System.AttributeTargets.$Flags("Field", "Parameter", "Property", "ReturnValue")]; });

})();

/* class System.Xml.XmlNameTable */ 

(function XmlNameTable$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm_mscorlib.TypeRef("System.Object"), 
      Name: "System.Xml.XmlNameTable", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Add", 
      new JSIL.MethodSignature($.String, [$.String])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Add", 
      new JSIL.MethodSignature($.String, [
          $jsilcore.TypeRef("System.Array", [$.Char]), $.Int32, 
          $.Int32
        ])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Get", 
      new JSIL.MethodSignature($.String, [$.String])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Get", 
      new JSIL.MethodSignature($.String, [
          $jsilcore.TypeRef("System.Array", [$.Char]), $.Int32, 
          $.Int32
        ])
    );

    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm_JSIL_Meta.TypeRef("JSIL.Meta.JSStubOnly"));

})();

/* enum System.Xml.XmlNodeType */ 

JSIL.MakeEnum(
  {
    FullName: "System.Xml.XmlNodeType", 
    BaseType: $asm_mscorlib.TypeRef("System.Int32"), 
    IsPublic: true, 
    IsFlags: false, 
  }, 
  {
    None: 0, 
    Element: 1, 
    Attribute: 2, 
    Text: 3, 
    CDATA: 4, 
    EntityReference: 5, 
    Entity: 6, 
    ProcessingInstruction: 7, 
    Comment: 8, 
    Document: 9, 
    DocumentType: 10, 
    DocumentFragment: 11, 
    Notation: 12, 
    Whitespace: 13, 
    SignificantWhitespace: 14, 
    EndElement: 15, 
    EndEntity: 16, 
    XmlDeclaration: 17, 
  }
);

/* class System.Xml.XmlParserContext */ 

(function XmlParserContext$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm_mscorlib.TypeRef("System.Object"), 
      Name: "System.Xml.XmlParserContext", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm_JSIL_Meta.TypeRef("JSIL.Meta.JSStubOnly"));

})();

/* class System.Xml.XmlQualifiedName */ 

(function XmlQualifiedName$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm_mscorlib.TypeRef("System.Object"), 
      Name: "System.Xml.XmlQualifiedName", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$.String, $.String])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Object.Equals", 
      new JSIL.MethodSignature($.Boolean, [$.Object])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_IsEmpty", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Name", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Namespace", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetHashCode", 
      JSIL.MethodSignature.Return($.Int32)
    );

    $.ExternalMethod({Static:true , Public:true }, "op_Equality", 
      new JSIL.MethodSignature($.Boolean, [$.Type, $.Type])
    );

    $.ExternalMethod({Static:true , Public:true }, "op_Inequality", 
      new JSIL.MethodSignature($.Boolean, [$.Type, $.Type])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "toString", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:true }, "ToString", 
      new JSIL.MethodSignature($.String, [$.String, $.String])
    );

    $['Field']({Static:true , Public:true , ReadOnly:true }, "Empty", $.Type); 
    $.Property({Static:false, Public:true }, "IsEmpty", $.Boolean);

    $.Property({Static:false, Public:true }, "Name", $.String);

    $.Property({Static:false, Public:true }, "Namespace", $.String);

    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm_JSIL_Meta.TypeRef("JSIL.Meta.JSStubOnly"));

})();

/* class System.Xml.XmlReader */ 

(function XmlReader$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm_mscorlib.TypeRef("System.Object"), 
      Name: "System.Xml.XmlReader", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:true , Public:true }, "Create", 
      new JSIL.MethodSignature($.Type, [$asm_mscorlib.TypeRef("System.IO.Stream")])
    );

    $.ExternalMethod({Static:true , Public:true }, "Create", 
      new JSIL.MethodSignature($.Type, [$.String])
    );

    $.ExternalMethod({Static:true , Public:true }, "Create", 
      new JSIL.MethodSignature($.Type, [$asm_mscorlib.TypeRef("System.IO.TextReader")])
    );

    $.ExternalMethod({Static:true , Public:true }, "Create", 
      new JSIL.MethodSignature($.Type, [$asm_mscorlib.TypeRef("System.IO.Stream"), $asm_CSharpXamlForHtml5_System_Xml_dll.TypeRef("System.Xml.XmlReaderSettings")])
    );

    $.ExternalMethod({Static:true , Public:true }, "Create", 
      new JSIL.MethodSignature($.Type, [$.String, $asm_CSharpXamlForHtml5_System_Xml_dll.TypeRef("System.Xml.XmlReaderSettings")])
    );

    $.ExternalMethod({Static:true , Public:true }, "Create", 
      new JSIL.MethodSignature($.Type, [$asm_mscorlib.TypeRef("System.IO.TextReader"), $asm_CSharpXamlForHtml5_System_Xml_dll.TypeRef("System.Xml.XmlReaderSettings")])
    );

    $.ExternalMethod({Static:true , Public:true }, "Create", 
      new JSIL.MethodSignature($.Type, [$.Type, $asm_CSharpXamlForHtml5_System_Xml_dll.TypeRef("System.Xml.XmlReaderSettings")])
    );

    $.ExternalMethod({Static:true , Public:true }, "Create", 
      new JSIL.MethodSignature($.Type, [
          $asm_mscorlib.TypeRef("System.IO.Stream"), $asm_CSharpXamlForHtml5_System_Xml_dll.TypeRef("System.Xml.XmlReaderSettings"), 
          $.String
        ])
    );

    $.ExternalMethod({Static:true , Public:true }, "Create", 
      new JSIL.MethodSignature($.Type, [
          $asm_mscorlib.TypeRef("System.IO.Stream"), $asm_CSharpXamlForHtml5_System_Xml_dll.TypeRef("System.Xml.XmlReaderSettings"), 
          $asm_CSharpXamlForHtml5_System_Xml_dll.TypeRef("System.Xml.XmlParserContext")
        ])
    );

    $.ExternalMethod({Static:true , Public:true }, "Create", 
      new JSIL.MethodSignature($.Type, [
          $.String, $asm_CSharpXamlForHtml5_System_Xml_dll.TypeRef("System.Xml.XmlReaderSettings"), 
          $asm_CSharpXamlForHtml5_System_Xml_dll.TypeRef("System.Xml.XmlParserContext")
        ])
    );

    $.ExternalMethod({Static:true , Public:true }, "Create", 
      new JSIL.MethodSignature($.Type, [
          $asm_mscorlib.TypeRef("System.IO.TextReader"), $asm_CSharpXamlForHtml5_System_Xml_dll.TypeRef("System.Xml.XmlReaderSettings"), 
          $.String
        ])
    );

    $.ExternalMethod({Static:true , Public:true }, "Create", 
      new JSIL.MethodSignature($.Type, [
          $asm_mscorlib.TypeRef("System.IO.TextReader"), $asm_CSharpXamlForHtml5_System_Xml_dll.TypeRef("System.Xml.XmlReaderSettings"), 
          $asm_CSharpXamlForHtml5_System_Xml_dll.TypeRef("System.Xml.XmlParserContext")
        ])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Dispose", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Dispose", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_AttributeCount", 
      JSIL.MethodSignature.Return($.Int32)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_BaseURI", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_CanResolveEntity", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_Depth", 
      JSIL.MethodSignature.Return($.Int32)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_EOF", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_HasAttributes", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_HasValue", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_IsDefault", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_IsEmptyElement", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_Item", 
      new JSIL.MethodSignature($.String, [$.Int32])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_Item", 
      new JSIL.MethodSignature($.String, [$.String])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_Item", 
      new JSIL.MethodSignature($.String, [$.String, $.String])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_LocalName", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_Name", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_NamespaceURI", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_NameTable", 
      JSIL.MethodSignature.Return($asm_CSharpXamlForHtml5_System_Xml_dll.TypeRef("System.Xml.XmlNameTable"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_NodeType", 
      JSIL.MethodSignature.Return($asm_CSharpXamlForHtml5_System_Xml_dll.TypeRef("System.Xml.XmlNodeType"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_Prefix", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_QuoteChar", 
      JSIL.MethodSignature.Return($.Char)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_ReadState", 
      JSIL.MethodSignature.Return($asm_CSharpXamlForHtml5_System_Xml_dll.TypeRef("System.Xml.ReadState"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_SchemaInfo", 
      JSIL.MethodSignature.Return($asm_CSharpXamlForHtml5_System_Xml_dll.TypeRef("System.Xml.IXmlSchemaInfo"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_Settings", 
      JSIL.MethodSignature.Return($asm_CSharpXamlForHtml5_System_Xml_dll.TypeRef("System.Xml.XmlReaderSettings"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_Value", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_ValueType", 
      JSIL.MethodSignature.Return($asm_mscorlib.TypeRef("System.Type"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_XmlLang", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetAttribute", 
      new JSIL.MethodSignature($.String, [$.Int32])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetAttribute", 
      new JSIL.MethodSignature($.String, [$.String])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetAttribute", 
      new JSIL.MethodSignature($.String, [$.String, $.String])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "IsStartElement", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "IsStartElement", 
      new JSIL.MethodSignature($.Boolean, [$.String])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "IsStartElement", 
      new JSIL.MethodSignature($.Boolean, [$.String, $.String])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "LookupNamespace", 
      new JSIL.MethodSignature($.String, [$.String])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "MoveToAttribute", 
      new JSIL.MethodSignature($.Boolean, [$.String])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "MoveToAttribute", 
      new JSIL.MethodSignature($.Boolean, [$.String, $.String])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "MoveToContent", 
      JSIL.MethodSignature.Return($asm_CSharpXamlForHtml5_System_Xml_dll.TypeRef("System.Xml.XmlNodeType"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "MoveToElement", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "MoveToFirstAttribute", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "MoveToNextAttribute", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Read", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "ReadAttributeValue", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "ReadContentAsString", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "ReadElementContentAsString", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "ReadElementContentAsString", 
      new JSIL.MethodSignature($.String, [$.String, $.String])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "ReadElementString", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "ReadElementString", 
      new JSIL.MethodSignature($.String, [$.String])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "ReadElementString", 
      new JSIL.MethodSignature($.String, [$.String, $.String])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "ReadEndElement", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "ReadStartElement", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "ReadStartElement", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "ReadStartElement", 
      new JSIL.MethodSignature(null, [$.String, $.String])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "ReadString", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "ReadToFollowing", 
      new JSIL.MethodSignature($.Boolean, [$.String])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "ReadToFollowing", 
      new JSIL.MethodSignature($.Boolean, [$.String, $.String])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "ReadToNextSibling", 
      new JSIL.MethodSignature($.Boolean, [$.String])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "ReadToNextSibling", 
      new JSIL.MethodSignature($.Boolean, [$.String, $.String])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "ResolveEntity", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Skip", 
      JSIL.MethodSignature.Void
    );

    $.Property({Static:false, Public:true , Virtual:true }, "AttributeCount", $.Int32);

    $.Property({Static:false, Public:true , Virtual:true }, "IsEmptyElement", $.Boolean);

    $.Property({Static:false, Public:true , Virtual:true }, "LocalName", $.String);

    $.Property({Static:false, Public:true , Virtual:true }, "Name", $.String);

    $.Property({Static:false, Public:true , Virtual:true }, "NamespaceURI", $.String);

    $.Property({Static:false, Public:true , Virtual:true }, "NameTable", $asm_CSharpXamlForHtml5_System_Xml_dll.TypeRef("System.Xml.XmlNameTable"));

    $.Property({Static:false, Public:true , Virtual:true }, "NodeType", $asm_CSharpXamlForHtml5_System_Xml_dll.TypeRef("System.Xml.XmlNodeType"));

    $.Property({Static:false, Public:true , Virtual:true }, "Value", $.String);

    $.Property({Static:false, Public:true , Virtual:true }, "ReadState", $asm_CSharpXamlForHtml5_System_Xml_dll.TypeRef("System.Xml.ReadState"));

    $.Property({Static:false, Public:true , Virtual:true }, "Settings", $asm_CSharpXamlForHtml5_System_Xml_dll.TypeRef("System.Xml.XmlReaderSettings"));

    $.Property({Static:false, Public:true , Virtual:true }, "Prefix", $.String);

    $.Property({Static:false, Public:true , Virtual:true }, "HasValue", $.Boolean);

    $.Property({Static:false, Public:true , Virtual:true }, "Depth", $.Int32);

    $.Property({Static:false, Public:true , Virtual:true }, "BaseURI", $.String);

    $.Property({Static:false, Public:true , Virtual:true }, "IsDefault", $.Boolean);

    $.Property({Static:false, Public:true , Virtual:true }, "QuoteChar", $.Char);

    $.Property({Static:false, Public:true , Virtual:true }, "XmlLang", $.String);

    $.Property({Static:false, Public:true , Virtual:true }, "SchemaInfo", $asm_CSharpXamlForHtml5_System_Xml_dll.TypeRef("System.Xml.IXmlSchemaInfo"));

    $.Property({Static:false, Public:true , Virtual:true }, "ValueType", $asm_mscorlib.TypeRef("System.Type"));

    $.Property({Static:false, Public:true , Virtual:true }, "Item", $.String);

    $.Property({Static:false, Public:true , Virtual:true }, "Item", $.String);

    $.Property({Static:false, Public:true , Virtual:true }, "Item", $.String);

    $.Property({Static:false, Public:true , Virtual:true }, "CanResolveEntity", $.Boolean);

    $.Property({Static:false, Public:true , Virtual:true }, "EOF", $.Boolean);

    $.Property({Static:false, Public:true , Virtual:true }, "HasAttributes", $.Boolean);

    $.ImplementInterfaces(
      /* 0 */ $asm_mscorlib.TypeRef("System.IDisposable")
    );

    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm_JSIL_Meta.TypeRef("JSIL.Meta.JSStubOnly"))
    .Attribute($asm_mscorlib.TypeRef("System.Reflection.DefaultMemberAttribute"), function () { return ["Item"]; });

})();

/* enum System.Xml.XmlSpace */ 

JSIL.MakeEnum(
  {
    FullName: "System.Xml.XmlSpace", 
    BaseType: $asm_mscorlib.TypeRef("System.Int32"), 
    IsPublic: true, 
    IsFlags: false, 
  }, 
  {
  }
);

/* interface System.Xml.IXmlSchemaInfo */ 

JSIL.MakeInterface(
  "System.Xml.IXmlSchemaInfo", true, [], function ($) {
  }, []);

/* enum System.Xml.ReadState */ 

JSIL.MakeEnum(
  {
    FullName: "System.Xml.ReadState", 
    BaseType: $asm_mscorlib.TypeRef("System.Int32"), 
    IsPublic: true, 
    IsFlags: false, 
  }, 
  {
  }
);

/* class System.Xml.XmlReaderSettings */ 

(function XmlReaderSettings$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm_mscorlib.TypeRef("System.Object"), 
      Name: "System.Xml.XmlReaderSettings", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm_JSIL_Meta.TypeRef("JSIL.Meta.JSStubOnly"));

})();

/* class System.Xml.Serialization.XmlSerializationGeneratedCode */ 

(function XmlSerializationGeneratedCode$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm_mscorlib.TypeRef("System.Object"), 
      Name: "System.Xml.Serialization.XmlSerializationGeneratedCode", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Void
    );

    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm_JSIL_Meta.TypeRef("JSIL.Meta.JSStubOnly"));

})();

/* class System.Xml.Serialization.XmlSerializationReader */ 

(function XmlSerializationReader$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm_CSharpXamlForHtml5_System_Xml_dll.TypeRef("System.Xml.Serialization.XmlSerializationGeneratedCode"), 
      Name: "System.Xml.Serialization.XmlSerializationReader", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "CheckReaderCount", 
      new JSIL.MethodSignature(null, [$jsilcore.TypeRef("JSIL.Reference", [$.Int32]), $jsilcore.TypeRef("JSIL.Reference", [$.Int32])])
    );

    $.ExternalMethod({Static:false, Public:false}, "CreateAbstractTypeException", 
      new JSIL.MethodSignature($asm_mscorlib.TypeRef("System.Exception"), [$.String, $.String])
    );

    $.ExternalMethod({Static:false, Public:false}, "CreateBadDerivationException", 
      new JSIL.MethodSignature($asm_mscorlib.TypeRef("System.Exception"), [
          $.String, $.String, 
          $.String, $.String, 
          $.String, $.String
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "CreateCtorHasSecurityException", 
      new JSIL.MethodSignature($asm_mscorlib.TypeRef("System.Exception"), [$.String])
    );

    $.ExternalMethod({Static:false, Public:false}, "CreateInaccessibleConstructorException", 
      new JSIL.MethodSignature($asm_mscorlib.TypeRef("System.Exception"), [$.String])
    );

    $.ExternalMethod({Static:false, Public:false}, "CreateInvalidCastException", 
      new JSIL.MethodSignature($asm_mscorlib.TypeRef("System.Exception"), [$asm_mscorlib.TypeRef("System.Type"), $.Object])
    );

    $.ExternalMethod({Static:false, Public:false}, "CreateInvalidCastException", 
      new JSIL.MethodSignature($asm_mscorlib.TypeRef("System.Exception"), [
          $asm_mscorlib.TypeRef("System.Type"), $.Object, 
          $.String
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "CreateMissingIXmlSerializableType", 
      new JSIL.MethodSignature($asm_mscorlib.TypeRef("System.Exception"), [
          $.String, $.String, 
          $.String
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "CreateReadOnlyCollectionException", 
      new JSIL.MethodSignature($asm_mscorlib.TypeRef("System.Exception"), [$.String])
    );

    $.ExternalMethod({Static:false, Public:false}, "CreateUnknownConstantException", 
      new JSIL.MethodSignature($asm_mscorlib.TypeRef("System.Exception"), [$.String, $asm_mscorlib.TypeRef("System.Type")])
    );

    $.ExternalMethod({Static:false, Public:false}, "CreateUnknownNodeException", 
      JSIL.MethodSignature.Return($asm_mscorlib.TypeRef("System.Exception"))
    );

    $.ExternalMethod({Static:false, Public:false}, "CreateUnknownTypeException", 
      new JSIL.MethodSignature($asm_mscorlib.TypeRef("System.Exception"), [$asm_CSharpXamlForHtml5_System_Xml_dll.TypeRef("System.Xml.XmlQualifiedName")])
    );

    $.ExternalMethod({Static:false, Public:false}, "EnsureArrayIndex", 
      new JSIL.MethodSignature($asm_mscorlib.TypeRef("System.Array"), [
          $asm_mscorlib.TypeRef("System.Array"), $.Int32, 
          $asm_mscorlib.TypeRef("System.Type")
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "get_Reader", 
      JSIL.MethodSignature.Return($asm_CSharpXamlForHtml5_System_Xml_dll.TypeRef("System.Xml.XmlReader"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_ReaderCount", 
      JSIL.MethodSignature.Return($.Int32)
    );

    $.ExternalMethod({Static:false, Public:false}, "GetNullAttr", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "GetXsiType", 
      JSIL.MethodSignature.Return($asm_CSharpXamlForHtml5_System_Xml_dll.TypeRef("System.Xml.XmlQualifiedName"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "InitCallbacks", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "InitIDs", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "IsXmlnsAttribute", 
      new JSIL.MethodSignature($.Boolean, [$.String])
    );

    $.ExternalMethod({Static:false, Public:false}, "ReadEndElement", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "ReadNull", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "ReadSerializable", 
      new JSIL.MethodSignature($asm_CSharpXamlForHtml5_System_Xml_dll.TypeRef("System.Xml.Serialization.IXmlSerializable"), [$asm_CSharpXamlForHtml5_System_Xml_dll.TypeRef("System.Xml.Serialization.IXmlSerializable")])
    );

    $.ExternalMethod({Static:false, Public:false}, "ReadSerializable", 
      new JSIL.MethodSignature($asm_CSharpXamlForHtml5_System_Xml_dll.TypeRef("System.Xml.Serialization.IXmlSerializable"), [$asm_CSharpXamlForHtml5_System_Xml_dll.TypeRef("System.Xml.Serialization.IXmlSerializable"), $.Boolean])
    );

    $.ExternalMethod({Static:false, Public:false}, "ReadString", 
      new JSIL.MethodSignature($.String, [$.String])
    );

    $.ExternalMethod({Static:false, Public:false}, "ReadString", 
      new JSIL.MethodSignature($.String, [$.String, $.Boolean])
    );

    $.ExternalMethod({Static:false, Public:false}, "ShrinkArray", 
      new JSIL.MethodSignature($asm_mscorlib.TypeRef("System.Array"), [
          $asm_mscorlib.TypeRef("System.Array"), $.Int32, 
          $asm_mscorlib.TypeRef("System.Type"), $.Boolean
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "ToByteArrayBase64", 
      new JSIL.MethodSignature($jsilcore.TypeRef("System.Array", [$.Byte]), [$.Boolean])
    );

    $.ExternalMethod({Static:true , Public:false}, "ToByteArrayBase64", 
      new JSIL.MethodSignature($jsilcore.TypeRef("System.Array", [$.Byte]), [$.String])
    );

    $.ExternalMethod({Static:true , Public:false}, "ToChar", 
      new JSIL.MethodSignature($.Char, [$.String])
    );

    $.ExternalMethod({Static:true , Public:false}, "ToDateTime", 
      new JSIL.MethodSignature($asm_mscorlib.TypeRef("System.DateTime"), [$.String])
    );

    $.ExternalMethod({Static:false, Public:false}, "UnknownNode", 
      JSIL.MethodSignature.Action($.Object)
    );

    $.ExternalMethod({Static:false, Public:false}, "UnknownNode", 
      new JSIL.MethodSignature(null, [$.Object, $.String])
    );

    $.Property({Static:false, Public:false}, "Reader", $asm_CSharpXamlForHtml5_System_Xml_dll.TypeRef("System.Xml.XmlReader"));

    $.Property({Static:false, Public:false}, "ReaderCount", $.Int32);

    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm_JSIL_Meta.TypeRef("JSIL.Meta.JSStubOnly"));

})();

/* class System.Xml.Serialization.XmlSerializationWriter */ 

(function XmlSerializationWriter$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm_CSharpXamlForHtml5_System_Xml_dll.System.Xml.Serialization.XmlSerializationGeneratedCode)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm_mscorlib.System.Object)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm_mscorlib.System.String)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm_mscorlib.System.InvalidOperationException)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize(System.Array.Of($asm_mscorlib.System.Object))) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm_mscorlib.System.Type)) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize(System.Array.Of($asm_mscorlib.System.Byte))) ();
  };
  var $T07 = function () {
    return ($T07 = JSIL.Memoize($asm_mscorlib.System.Char)) ();
  };
  var $T08 = function () {
    return ($T08 = JSIL.Memoize($asm_mscorlib.System.Int32)) ();
  };
  var $T09 = function () {
    return ($T09 = JSIL.Memoize($asm_mscorlib.System.DateTime)) ();
  };
  var $T0A = function () {
    return ($T0A = JSIL.Memoize($asm_CSharpXamlForHtml5_System_Xml_dll.INTERNAL_DateTimeHelpers)) ();
  };
  var $T0B = function () {
    return ($T0B = JSIL.Memoize($asm_CSharpXamlForHtml5_System_Xml_dll.System.Xml.XmlWriter)) ();
  };
  var $T0C = function () {
    return ($T0C = JSIL.Memoize($asm_CSharpXamlForHtml5_System_Xml_dll.System.Xml.Serialization.XmlSerializerNamespaces)) ();
  };
  var $T0D = function () {
    return ($T0D = JSIL.Memoize($asm_CSharpXamlForHtml5_System_Xml_dll.INTERNAL_EscapeHelpers)) ();
  };
  var $T0E = function () {
    return ($T0E = JSIL.Memoize($asm_mscorlib.System.Convert)) ();
  };
  var $T0F = function () {
    return ($T0F = JSIL.Memoize($asm_mscorlib.System.Boolean)) ();
  };
  var $T10 = function () {
    return ($T10 = JSIL.Memoize($asm_mscorlib.System.NotImplementedException)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.ConstructorSignature($asm_mscorlib.TypeRef("System.InvalidOperationException"), [$asm_mscorlib.TypeRef("System.String")]))) ();
  };
  var $S01 = function () {
    return ($S01 = JSIL.Memoize(new JSIL.MethodSignature($asm_mscorlib.TypeRef("System.Exception"), [$asm_mscorlib.TypeRef("System.Type")]))) ();
  };
  var $S02 = function () {
    return ($S02 = JSIL.Memoize(new JSIL.MethodSignature(null, [
        $asm_mscorlib.TypeRef("System.String"), $asm_mscorlib.TypeRef("System.String"), 
        $asm_mscorlib.TypeRef("System.String")
      ]))) ();
  };
  var $S03 = function () {
    return ($S03 = JSIL.Memoize(new JSIL.ConstructorSignature($asm_mscorlib.TypeRef("System.NotImplementedException"), null))) ();
  };

  function XmlSerializationWriter__ctor () {
    $T00().prototype['_ctor'].call(this);
  };

  function XmlSerializationWriter_CreateInvalidEnumValueException (value, typeName) {
    return $S00().Construct(JSIL.ConcatString.apply(null, JSIL.Array.New($T01(), ["Invalid enum value '", value, "' for type '", typeName, "'."])));
  };

  function XmlSerializationWriter_CreateUnknownTypeException$00 (o) {
    return $S01().CallVirtual("CreateUnknownTypeException", null, this, JSIL['GetType'](o));
  };

  function XmlSerializationWriter_CreateUnknownTypeException$01 (type) {
    return $S00().Construct(JSIL.ConcatString("Unknown type for serialization: ", type['get_FullName']()));
  };

  function XmlSerializationWriter_FromByteArrayBase64 (value) {
    return value;
  };

  function XmlSerializationWriter_FromChar (value) {
    var num = (value['charCodeAt'](0) | 0);
    return (num).toString();
  };

  function XmlSerializationWriter_FromDateTime (value) {
    return $T0A()['FromDateTime'](value['MemberwiseClone']());
  };

  function XmlSerializationWriter_Init (xmlWriter, namespaces, encodingStyle, id) {
    this._xmlWriter = xmlWriter;
  };

  function XmlSerializationWriter_TopLevelElement () {
  };

  function XmlSerializationWriter_WriteElementString (localName, ns, value) {
    (this._xmlWriter)['WriteStartElement'](localName);
    if (value !== null) {
      (this._xmlWriter)['WriteString']($T0D()['EscapeXml'](value));
    }
    (this._xmlWriter)['WriteEndElement']();
  };

  function XmlSerializationWriter_WriteElementStringRaw$02 (localName, ns, value) {
    if (value !== null) {
      (this._xmlWriter)['WriteStartElement'](localName);
      (this._xmlWriter)['WriteString']($T0D()['EscapeXml'](value));
      (this._xmlWriter)['WriteEndElement']();
    }
  };

  function XmlSerializationWriter_WriteElementStringRaw$03 (localName, ns, value) {
    if (value !== null) {
      (this._xmlWriter)['WriteStartElement'](localName);
      (this._xmlWriter)['WriteString']($T0D()['EscapeXml']($T0E()['ToBase64String'](value)));
      (this._xmlWriter)['WriteEndElement']();
    }
  };

  function XmlSerializationWriter_WriteEmptyTag (name, ns) {
  };

  function XmlSerializationWriter_WriteEndElement$04 () {
    (this._xmlWriter)['WriteEndElement']();
  };

  function XmlSerializationWriter_WriteEndElement$05 (o) {
    this['WriteEndElement']();
  };

  function XmlSerializationWriter_WriteNullableStringLiteral (name, ns, value) {
    if (value === null) {
      this['WriteNullTagLiteral'](name, ns);
    } else {
      this['WriteElementString'](name, ns, value);
    }
  };

  function XmlSerializationWriter_WriteNullableStringLiteralRaw (name, ns, value) {
    if (value === null) {
      this['WriteNullTagLiteral'](name, ns);
    } else {
      $S02().CallVirtual("WriteElementStringRaw", null, this, name, ns, value);
    }
  };

  function XmlSerializationWriter_WriteNullTagLiteral (name, ns) {
    if ((name !== null) && ((name.length | 0) !== 0)) {
      this['WriteStartElement'](
        name, 
        ns, 
        null, 
        false, 
        null
      );
      (this._xmlWriter)['WriteAttributeString']("xmlns:i", "http://www.w3.org/2001/XMLSchema-instance");
      (this._xmlWriter)['WriteAttributeString']("i:nil", "true");
      (this._xmlWriter)['WriteEndElement']();
    }
  };

  function XmlSerializationWriter_WriteStartDocument () {
    (this._xmlWriter)['WriteStartDocument']();
  };

  function XmlSerializationWriter_WriteStartElement$06 (name, ns, o, writePrefixed) {
    this['WriteStartElement'](
      name, 
      ns, 
      o, 
      writePrefixed, 
      null
    );
  };

  function XmlSerializationWriter_WriteStartElement$07 (name, ns, o, writePrefixed, xmlns) {
    if ($T02()['IsNullOrWhiteSpace'](ns)) {
      (this._xmlWriter)['WriteStartElement'](name);
    } else {
      (this._xmlWriter)['WriteStartElement'](name, ns);
    }
  };

  function XmlSerializationWriter_WriteXsiType (name, ns) {
    throw $S03().Construct();
  };

  JSIL.MakeType({
      BaseType: $asm_CSharpXamlForHtml5_System_Xml_dll.TypeRef("System.Xml.Serialization.XmlSerializationGeneratedCode"), 
      Name: "System.Xml.Serialization.XmlSerializationWriter", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Void, 
      XmlSerializationWriter__ctor
    );

    $.Method({Static:false, Public:false}, "CreateInvalidEnumValueException", 
      new JSIL.MethodSignature($asm_mscorlib.TypeRef("System.Exception"), [$.Object, $.String]), 
      XmlSerializationWriter_CreateInvalidEnumValueException
    );

    $.Method({Static:false, Public:false}, "CreateUnknownTypeException", 
      new JSIL.MethodSignature($asm_mscorlib.TypeRef("System.Exception"), [$.Object]), 
      XmlSerializationWriter_CreateUnknownTypeException$00
    );

    $.Method({Static:false, Public:false}, "CreateUnknownTypeException", 
      new JSIL.MethodSignature($asm_mscorlib.TypeRef("System.Exception"), [$asm_mscorlib.TypeRef("System.Type")]), 
      XmlSerializationWriter_CreateUnknownTypeException$01
    );

    $.Method({Static:true , Public:false}, "FromByteArrayBase64", 
      new JSIL.MethodSignature($jsilcore.TypeRef("System.Array", [$.Byte]), [$jsilcore.TypeRef("System.Array", [$.Byte])]), 
      XmlSerializationWriter_FromByteArrayBase64
    );

    $.Method({Static:true , Public:false}, "FromChar", 
      new JSIL.MethodSignature($.String, [$.Char]), 
      XmlSerializationWriter_FromChar
    );

    $.Method({Static:true , Public:false}, "FromDateTime", 
      new JSIL.MethodSignature($.String, [$asm_mscorlib.TypeRef("System.DateTime")]), 
      XmlSerializationWriter_FromDateTime
    );

    $.Method({Static:false, Public:false}, "Init", 
      new JSIL.MethodSignature(null, [
          $asm_CSharpXamlForHtml5_System_Xml_dll.TypeRef("System.Xml.XmlWriter"), $asm_CSharpXamlForHtml5_System_Xml_dll.TypeRef("System.Xml.Serialization.XmlSerializerNamespaces"), 
          $.String, $.String
        ]), 
      XmlSerializationWriter_Init
    );

    $.Method({Static:false, Public:false}, "TopLevelElement", 
      JSIL.MethodSignature.Void, 
      XmlSerializationWriter_TopLevelElement
    );

    $.Method({Static:false, Public:false}, "WriteElementString", 
      new JSIL.MethodSignature(null, [
          $.String, $.String, 
          $.String
        ]), 
      XmlSerializationWriter_WriteElementString
    );

    $.Method({Static:false, Public:false}, "WriteElementStringRaw", 
      new JSIL.MethodSignature(null, [
          $.String, $.String, 
          $.String
        ]), 
      XmlSerializationWriter_WriteElementStringRaw$02
    );

    $.Method({Static:false, Public:false}, "WriteElementStringRaw", 
      new JSIL.MethodSignature(null, [
          $.String, $.String, 
          $jsilcore.TypeRef("System.Array", [$.Byte])
        ]), 
      XmlSerializationWriter_WriteElementStringRaw$03
    );

    $.Method({Static:false, Public:false}, "WriteEmptyTag", 
      new JSIL.MethodSignature(null, [$.String, $.String]), 
      XmlSerializationWriter_WriteEmptyTag
    );

    $.Method({Static:false, Public:false}, "WriteEndElement", 
      JSIL.MethodSignature.Void, 
      XmlSerializationWriter_WriteEndElement$04
    );

    $.Method({Static:false, Public:false}, "WriteEndElement", 
      JSIL.MethodSignature.Action($.Object), 
      XmlSerializationWriter_WriteEndElement$05
    );

    $.Method({Static:false, Public:false}, "WriteNullableStringLiteral", 
      new JSIL.MethodSignature(null, [
          $.String, $.String, 
          $.String
        ]), 
      XmlSerializationWriter_WriteNullableStringLiteral
    );

    $.Method({Static:false, Public:false}, "WriteNullableStringLiteralRaw", 
      new JSIL.MethodSignature(null, [
          $.String, $.String, 
          $.String
        ]), 
      XmlSerializationWriter_WriteNullableStringLiteralRaw
    );

    $.Method({Static:false, Public:false}, "WriteNullTagLiteral", 
      new JSIL.MethodSignature(null, [$.String, $.String]), 
      XmlSerializationWriter_WriteNullTagLiteral
    );

    $.Method({Static:false, Public:false}, "WriteStartDocument", 
      JSIL.MethodSignature.Void, 
      XmlSerializationWriter_WriteStartDocument
    );

    $.Method({Static:false, Public:false}, "WriteStartElement", 
      new JSIL.MethodSignature(null, [
          $.String, $.String, 
          $.Object, $.Boolean
        ]), 
      XmlSerializationWriter_WriteStartElement$06
    );

    $.Method({Static:false, Public:false}, "WriteStartElement", 
      new JSIL.MethodSignature(null, [
          $.String, $.String, 
          $.Object, $.Boolean, 
          $asm_CSharpXamlForHtml5_System_Xml_dll.TypeRef("System.Xml.Serialization.XmlSerializerNamespaces")
        ]), 
      XmlSerializationWriter_WriteStartElement$07
    );

    $.Method({Static:false, Public:false}, "WriteXsiType", 
      new JSIL.MethodSignature(null, [$.String, $.String]), 
      XmlSerializationWriter_WriteXsiType
    );

    $['Field']({Static:false, Public:false}, "_xmlWriter", $asm_CSharpXamlForHtml5_System_Xml_dll.TypeRef("System.Xml.XmlWriter")); 
    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Xml.Serialization.XmlSerializer */ 

(function XmlSerializer$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm_mscorlib.System.Type)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm_CSharpXamlForHtml5_System_Xml_dll.System.Xml.XmlReader)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm_mscorlib.System.NotImplementedException)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm_mscorlib.System.IO.Stream)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm_mscorlib.System.IO.StreamReader)) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm_mscorlib.System.String)) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize($asm_mscorlib.System.IO.TextReader)) ();
  };
  var $T07 = function () {
    return ($T07 = JSIL.Memoize($asm_mscorlib.System.Object)) ();
  };
  var $T08 = function () {
    return ($T08 = JSIL.Memoize(System.Array.Of($asm_mscorlib.System.Byte))) ();
  };
  var $T09 = function () {
    return ($T09 = JSIL.Memoize($asm_mscorlib.System.Text.Encoding)) ();
  };
  var $T0A = function () {
    return ($T0A = JSIL.Memoize($asm_mscorlib.System.IO.MemoryStream)) ();
  };
  var $T0B = function () {
    return ($T0B = JSIL.Memoize($asm_CSharpXamlForHtml5_System_Xml_dll.System.Xml.Serialization.XmlSerializationReader)) ();
  };
  var $T0C = function () {
    return ($T0C = JSIL.Memoize($asm_mscorlib.System.IO.StreamWriter)) ();
  };
  var $T0D = function () {
    return ($T0D = JSIL.Memoize($asm_mscorlib.System.IO.TextWriter)) ();
  };
  var $T0E = function () {
    return ($T0E = JSIL.Memoize($asm_mscorlib.System.IDisposable)) ();
  };
  var $T0F = function () {
    return ($T0F = JSIL.Memoize($asm_CSharpXamlForHtml5_System_Xml_dll.System.Xml.Serialization.XmlSerializationWriter)) ();
  };
  var $T10 = function () {
    return ($T10 = JSIL.Memoize($asm_mscorlib.System.Func$b3.Of(
        $asm_mscorlib.System.String, $asm_mscorlib.System.Type, 
        $asm_mscorlib.System.Object
    ))) ();
  };
  var $T11 = function () {
    return ($T11 = JSIL.Memoize($asm_mscorlib.System.Func$b3.Of(
        $asm_mscorlib.System.Object, $asm_mscorlib.System.Type, 
        $asm_mscorlib.System.String
    ))) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.ConstructorSignature($asm_mscorlib.TypeRef("System.NotImplementedException"), null))) ();
  };
  var $S01 = function () {
    return ($S01 = JSIL.Memoize(new JSIL.ConstructorSignature($asm_mscorlib.TypeRef("System.IO.StreamReader"), [$asm_mscorlib.TypeRef("System.IO.Stream")]))) ();
  };
  var $S02 = function () {
    return ($S02 = JSIL.Memoize(new JSIL.MethodSignature($asm_mscorlib.TypeRef("System.Object"), [$asm_mscorlib.TypeRef("System.String")]))) ();
  };
  var $S03 = function () {
    return ($S03 = JSIL.Memoize(new JSIL.ConstructorSignature($asm_mscorlib.TypeRef("System.IO.MemoryStream"), [$jsilcore.TypeRef("System.Array", [$asm_mscorlib.TypeRef("System.Byte")])]))) ();
  };
  var $S04 = function () {
    return ($S04 = JSIL.Memoize(new JSIL.ConstructorSignature($asm_mscorlib.TypeRef("System.IO.StreamWriter"), [$asm_mscorlib.TypeRef("System.IO.Stream")]))) ();
  };
  var $S05 = function () {
    return ($S05 = JSIL.Memoize(JSIL.MethodSignature.Action($asm_mscorlib.TypeRef("System.String")))) ();
  };
  var $S06 = function () {
    return ($S06 = JSIL.Memoize(new JSIL.ConstructorSignature($asm_mscorlib.TypeRef("System.NotImplementedException"), [$asm_mscorlib.TypeRef("System.String")]))) ();
  };
  var $IM00 = function () {
    return ($IM00 = JSIL.Memoize($asm_mscorlib.System.IDisposable.Dispose)) ();
  };

  function XmlSerializer__ctor$00 () {
  };

  function XmlSerializer__ctor$01 (type) {
    this._type = type;
  };

  function XmlSerializer_CanDeserialize (xmlReader) {
    throw $S00().Construct();
  };

  function XmlSerializer_CreateReader () {
    throw $S00().Construct();
  };

  function XmlSerializer_CreateWriter () {
    throw $S00().Construct();
  };

  function XmlSerializer_Deserialize$02 (stream) {
    var streamReader = $S01().Construct(stream);
    var serializedXml = streamReader['ReadToEnd']();
    return $S02().CallVirtual("Deserialize", null, this, serializedXml);
  };

  function XmlSerializer_Deserialize$03 (xmlReader) {
    var obj = (xmlReader._domNode);
    var obj2 = ((new XMLSerializer()).serializeToString(obj));
    var buffer = $T08().$Cast($T09()['get_UTF8']()['GetBytes'](obj2));
    var memoryStream = $S03().Construct(buffer);
    return this['Deserialize'](obj2);
  };

  function XmlSerializer_Deserialize$04 (serializedXml) {
    return $thisType.XmlSerializer$MethodToDeserializeUsingDataContractSerializer$value(serializedXml, this._type);
  };

  function XmlSerializer_Deserialize$05 (reader) {
    throw $S00().Construct();
  };

  function XmlSerializer_get_MethodToDeserializeUsingDataContractSerializer () {
    return $thisType.XmlSerializer$MethodToDeserializeUsingDataContractSerializer$value;
  };

  function XmlSerializer_get_MethodToSerializeUsingDataContractSerializer () {
    return $thisType.XmlSerializer$MethodToSerializeUsingDataContractSerializer$value;
  };

  function XmlSerializer_Serialize$06 (stream, o) {
    alert('The XmlSerializer has been replaced by the DataContractSerializer.');
    var value = $thisType.XmlSerializer$MethodToSerializeUsingDataContractSerializer$value(o, this._type);
    var streamWriter = $S04().Construct(stream);
    try {
      $S05().CallVirtual("Write", null, streamWriter, value);
      streamWriter['Flush']();
    } finally {
      if (streamWriter !== null) {
        $IM00().Call(streamWriter, null);
      }
    }
  };

  function XmlSerializer_Serialize$07 (o, writer) {
    throw $S06().Construct("Please use the DataContractSerializer instead of the XmlSerializer.");
  };

  function XmlSerializer_set_MethodToDeserializeUsingDataContractSerializer (value) {
    $thisType.XmlSerializer$MethodToDeserializeUsingDataContractSerializer$value = value;
  };

  function XmlSerializer_set_MethodToSerializeUsingDataContractSerializer (value) {
    $thisType.XmlSerializer$MethodToSerializeUsingDataContractSerializer$value = value;
  };

  JSIL.MakeType({
      BaseType: $asm_mscorlib.TypeRef("System.Object"), 
      Name: "System.Xml.Serialization.XmlSerializer", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Void, 
      XmlSerializer__ctor$00
    );

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm_mscorlib.TypeRef("System.Type")), 
      XmlSerializer__ctor$01
    );

    $.Method({Static:false, Public:true , Virtual:true }, "CanDeserialize", 
      new JSIL.MethodSignature($.Boolean, [$asm_CSharpXamlForHtml5_System_Xml_dll.TypeRef("System.Xml.XmlReader")]), 
      XmlSerializer_CanDeserialize
    );

    $.Method({Static:false, Public:false, Virtual:true }, "CreateReader", 
      JSIL.MethodSignature.Return($asm_CSharpXamlForHtml5_System_Xml_dll.TypeRef("System.Xml.Serialization.XmlSerializationReader")), 
      XmlSerializer_CreateReader
    );

    $.Method({Static:false, Public:false, Virtual:true }, "CreateWriter", 
      JSIL.MethodSignature.Return($asm_CSharpXamlForHtml5_System_Xml_dll.TypeRef("System.Xml.Serialization.XmlSerializationWriter")), 
      XmlSerializer_CreateWriter
    );

    $.Method({Static:false, Public:true }, "Deserialize", 
      new JSIL.MethodSignature($.Object, [$asm_mscorlib.TypeRef("System.IO.Stream")]), 
      XmlSerializer_Deserialize$02
    );

    $.Method({Static:false, Public:true }, "Deserialize", 
      new JSIL.MethodSignature($.Object, [$asm_CSharpXamlForHtml5_System_Xml_dll.TypeRef("System.Xml.XmlReader")]), 
      XmlSerializer_Deserialize$03
    );

    $.Method({Static:false, Public:false}, "Deserialize", 
      new JSIL.MethodSignature($.Object, [$.String]), 
      XmlSerializer_Deserialize$04
    );

    $.Method({Static:false, Public:false, Virtual:true }, "Deserialize", 
      new JSIL.MethodSignature($.Object, [$asm_CSharpXamlForHtml5_System_Xml_dll.TypeRef("System.Xml.Serialization.XmlSerializationReader")]), 
      XmlSerializer_Deserialize$05
    );

    $.Method({Static:true , Public:true }, "get_MethodToDeserializeUsingDataContractSerializer", 
      JSIL.MethodSignature.Return($asm_mscorlib.TypeRef("System.Func`3", [
            $.String, $asm_mscorlib.TypeRef("System.Type"), 
            $.Object
          ])), 
      XmlSerializer_get_MethodToDeserializeUsingDataContractSerializer
    )
      .Attribute($asm_mscorlib.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:true , Public:true }, "get_MethodToSerializeUsingDataContractSerializer", 
      JSIL.MethodSignature.Return($asm_mscorlib.TypeRef("System.Func`3", [
            $.Object, $asm_mscorlib.TypeRef("System.Type"), 
            $.String
          ])), 
      XmlSerializer_get_MethodToSerializeUsingDataContractSerializer
    )
      .Attribute($asm_mscorlib.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "Serialize", 
      new JSIL.MethodSignature(null, [$asm_mscorlib.TypeRef("System.IO.Stream"), $.Object]), 
      XmlSerializer_Serialize$06
    );

    $.Method({Static:false, Public:false, Virtual:true }, "Serialize", 
      new JSIL.MethodSignature(null, [$.Object, $asm_CSharpXamlForHtml5_System_Xml_dll.TypeRef("System.Xml.Serialization.XmlSerializationWriter")]), 
      XmlSerializer_Serialize$07
    );

    $.Method({Static:true , Public:true }, "set_MethodToDeserializeUsingDataContractSerializer", 
      JSIL.MethodSignature.Action($asm_mscorlib.TypeRef("System.Func`3", [
            $.String, $asm_mscorlib.TypeRef("System.Type"), 
            $.Object
          ])), 
      XmlSerializer_set_MethodToDeserializeUsingDataContractSerializer
    )
      .Attribute($asm_mscorlib.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:true , Public:true }, "set_MethodToSerializeUsingDataContractSerializer", 
      JSIL.MethodSignature.Action($asm_mscorlib.TypeRef("System.Func`3", [
            $.Object, $asm_mscorlib.TypeRef("System.Type"), 
            $.String
          ])), 
      XmlSerializer_set_MethodToSerializeUsingDataContractSerializer
    )
      .Attribute($asm_mscorlib.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $['Field']({Static:false, Public:false}, "_type", $asm_mscorlib.TypeRef("System.Type")); 
    $['Field']({Static:true , Public:false}, "XmlSerializer$MethodToSerializeUsingDataContractSerializer$value", $asm_mscorlib.TypeRef("System.Func`3", [
          $.Object, $asm_mscorlib.TypeRef("System.Type"), 
          $.String
        ]))
      .Attribute($asm_mscorlib.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute")); 
    $['Field']({Static:true , Public:false}, "XmlSerializer$MethodToDeserializeUsingDataContractSerializer$value", $asm_mscorlib.TypeRef("System.Func`3", [
          $.String, $asm_mscorlib.TypeRef("System.Type"), 
          $.Object
        ]))
      .Attribute($asm_mscorlib.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute")); 
    $.Property({Static:true , Public:true }, "MethodToSerializeUsingDataContractSerializer", $asm_mscorlib.TypeRef("System.Func`3", [
          $.Object, $asm_mscorlib.TypeRef("System.Type"), 
          $.String
        ]));

    $.Property({Static:true , Public:true }, "MethodToDeserializeUsingDataContractSerializer", $asm_mscorlib.TypeRef("System.Func`3", [
          $.String, $asm_mscorlib.TypeRef("System.Type"), 
          $.Object
        ]));

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Xml.Serialization.XmlSerializerImplementation */ 

(function XmlSerializerImplementation$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm_mscorlib.System.Type)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm_mscorlib.System.NotImplementedException)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.ConstructorSignature($asm_mscorlib.TypeRef("System.NotImplementedException"), null))) ();
  };

  function XmlSerializerImplementation__ctor () {
  };

  function XmlSerializerImplementation_CanSerialize (type) {
    throw $S00().Construct();
  };

  function XmlSerializerImplementation_get_Reader () {
    throw $S00().Construct();
  };

  function XmlSerializerImplementation_get_ReadMethods () {
    throw $S00().Construct();
  };

  function XmlSerializerImplementation_get_TypedSerializers () {
    throw $S00().Construct();
  };

  function XmlSerializerImplementation_get_WriteMethods () {
    throw $S00().Construct();
  };

  function XmlSerializerImplementation_get_Writer () {
    throw $S00().Construct();
  };

  function XmlSerializerImplementation_GetSerializer (type) {
    throw $S00().Construct();
  };

  JSIL.MakeType({
      BaseType: $asm_mscorlib.TypeRef("System.Object"), 
      Name: "System.Xml.Serialization.XmlSerializerImplementation", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Void, 
      XmlSerializerImplementation__ctor
    );

    $.Method({Static:false, Public:true , Virtual:true }, "CanSerialize", 
      new JSIL.MethodSignature($.Boolean, [$asm_mscorlib.TypeRef("System.Type")]), 
      XmlSerializerImplementation_CanSerialize
    );

    $.Method({Static:false, Public:true , Virtual:true }, "get_Reader", 
      JSIL.MethodSignature.Return($asm_CSharpXamlForHtml5_System_Xml_dll.TypeRef("System.Xml.Serialization.XmlSerializationReader")), 
      XmlSerializerImplementation_get_Reader
    );

    $.Method({Static:false, Public:true , Virtual:true }, "get_ReadMethods", 
      JSIL.MethodSignature.Return($asm_mscorlib.TypeRef("System.Collections.Hashtable")), 
      XmlSerializerImplementation_get_ReadMethods
    );

    $.Method({Static:false, Public:true , Virtual:true }, "get_TypedSerializers", 
      JSIL.MethodSignature.Return($asm_mscorlib.TypeRef("System.Collections.Hashtable")), 
      XmlSerializerImplementation_get_TypedSerializers
    );

    $.Method({Static:false, Public:true , Virtual:true }, "get_WriteMethods", 
      JSIL.MethodSignature.Return($asm_mscorlib.TypeRef("System.Collections.Hashtable")), 
      XmlSerializerImplementation_get_WriteMethods
    );

    $.Method({Static:false, Public:true , Virtual:true }, "get_Writer", 
      JSIL.MethodSignature.Return($asm_CSharpXamlForHtml5_System_Xml_dll.TypeRef("System.Xml.Serialization.XmlSerializationWriter")), 
      XmlSerializerImplementation_get_Writer
    );

    $.Method({Static:false, Public:true , Virtual:true }, "GetSerializer", 
      new JSIL.MethodSignature($asm_CSharpXamlForHtml5_System_Xml_dll.TypeRef("System.Xml.Serialization.XmlSerializer"), [$asm_mscorlib.TypeRef("System.Type")]), 
      XmlSerializerImplementation_GetSerializer
    );

    $.Property({Static:false, Public:true , Virtual:true }, "Reader", $asm_CSharpXamlForHtml5_System_Xml_dll.TypeRef("System.Xml.Serialization.XmlSerializationReader"));

    $.Property({Static:false, Public:true , Virtual:true }, "ReadMethods", $asm_mscorlib.TypeRef("System.Collections.Hashtable"));

    $.Property({Static:false, Public:true , Virtual:true }, "TypedSerializers", $asm_mscorlib.TypeRef("System.Collections.Hashtable"));

    $.Property({Static:false, Public:true , Virtual:true }, "WriteMethods", $asm_mscorlib.TypeRef("System.Collections.Hashtable"));

    $.Property({Static:false, Public:true , Virtual:true }, "Writer", $asm_CSharpXamlForHtml5_System_Xml_dll.TypeRef("System.Xml.Serialization.XmlSerializationWriter"));

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Xml.Serialization.XmlSerializerNamespaces */ 

(function XmlSerializerNamespaces$Members () {
  var $, $thisType;
  function XmlSerializerNamespaces__ctor () {
  };

  JSIL.MakeType({
      BaseType: $asm_mscorlib.TypeRef("System.Object"), 
      Name: "System.Xml.Serialization.XmlSerializerNamespaces", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      XmlSerializerNamespaces__ctor
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Xml.Serialization.XmlSerializerVersionAttribute */ 

(function XmlSerializerVersionAttribute$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm_mscorlib.System.Attribute)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm_mscorlib.System.Type)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm_mscorlib.System.String)) ();
  };

  function XmlSerializerVersionAttribute__ctor$00 () {
    $T00().prototype['_ctor'].call(this);
  };

  function XmlSerializerVersionAttribute__ctor$01 (type) {
    $T00().prototype['_ctor'].call(this);
  };

  function XmlSerializerVersionAttribute_get_Namespace () {
    return this.XmlSerializerVersionAttribute$Namespace$value;
  };

  function XmlSerializerVersionAttribute_get_ParentAssemblyId () {
    return this.XmlSerializerVersionAttribute$ParentAssemblyId$value;
  };

  function XmlSerializerVersionAttribute_get_Type () {
    return this.XmlSerializerVersionAttribute$Type$value;
  };

  function XmlSerializerVersionAttribute_get_Version () {
    return this.XmlSerializerVersionAttribute$Version$value;
  };

  function XmlSerializerVersionAttribute_set_Namespace (value) {
    this.XmlSerializerVersionAttribute$Namespace$value = value;
  };

  function XmlSerializerVersionAttribute_set_ParentAssemblyId (value) {
    this.XmlSerializerVersionAttribute$ParentAssemblyId$value = value;
  };

  function XmlSerializerVersionAttribute_set_Type (value) {
    this.XmlSerializerVersionAttribute$Type$value = value;
  };

  function XmlSerializerVersionAttribute_set_Version (value) {
    this.XmlSerializerVersionAttribute$Version$value = value;
  };

  JSIL.MakeType({
      BaseType: $asm_mscorlib.TypeRef("System.Attribute"), 
      Name: "System.Xml.Serialization.XmlSerializerVersionAttribute", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      XmlSerializerVersionAttribute__ctor$00
    );

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm_mscorlib.TypeRef("System.Type")), 
      XmlSerializerVersionAttribute__ctor$01
    );

    $.Method({Static:false, Public:true }, "get_Namespace", 
      JSIL.MethodSignature.Return($.String), 
      XmlSerializerVersionAttribute_get_Namespace
    )
      .Attribute($asm_mscorlib.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_ParentAssemblyId", 
      JSIL.MethodSignature.Return($.String), 
      XmlSerializerVersionAttribute_get_ParentAssemblyId
    )
      .Attribute($asm_mscorlib.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Type", 
      JSIL.MethodSignature.Return($asm_mscorlib.TypeRef("System.Type")), 
      XmlSerializerVersionAttribute_get_Type
    )
      .Attribute($asm_mscorlib.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Version", 
      JSIL.MethodSignature.Return($.String), 
      XmlSerializerVersionAttribute_get_Version
    )
      .Attribute($asm_mscorlib.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Namespace", 
      JSIL.MethodSignature.Action($.String), 
      XmlSerializerVersionAttribute_set_Namespace
    )
      .Attribute($asm_mscorlib.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_ParentAssemblyId", 
      JSIL.MethodSignature.Action($.String), 
      XmlSerializerVersionAttribute_set_ParentAssemblyId
    )
      .Attribute($asm_mscorlib.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Type", 
      JSIL.MethodSignature.Action($asm_mscorlib.TypeRef("System.Type")), 
      XmlSerializerVersionAttribute_set_Type
    )
      .Attribute($asm_mscorlib.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Version", 
      JSIL.MethodSignature.Action($.String), 
      XmlSerializerVersionAttribute_set_Version
    )
      .Attribute($asm_mscorlib.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $['Field']({Static:false, Public:false}, "XmlSerializerVersionAttribute$Namespace$value", $.String)
      .Attribute($asm_mscorlib.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute")); 
    $['Field']({Static:false, Public:false}, "XmlSerializerVersionAttribute$ParentAssemblyId$value", $.String)
      .Attribute($asm_mscorlib.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute")); 
    $['Field']({Static:false, Public:false}, "XmlSerializerVersionAttribute$Type$value", $asm_mscorlib.TypeRef("System.Type"))
      .Attribute($asm_mscorlib.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute")); 
    $['Field']({Static:false, Public:false}, "XmlSerializerVersionAttribute$Version$value", $.String)
      .Attribute($asm_mscorlib.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute")); 
    $.Property({Static:false, Public:true }, "Namespace", $.String);

    $.Property({Static:false, Public:true }, "ParentAssemblyId", $.String);

    $.Property({Static:false, Public:true }, "Type", $asm_mscorlib.TypeRef("System.Type"));

    $.Property({Static:false, Public:true }, "Version", $.String);

    $.ImplementInterfaces(
    );

    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm_mscorlib.TypeRef("System.AttributeUsageAttribute"), function () { return [$asm_mscorlib.System.AttributeTargets.Assembly]; });

})();

/* enum System.Xml.WriteState */ 

JSIL.MakeEnum(
  {
    FullName: "System.Xml.WriteState", 
    BaseType: $asm_mscorlib.TypeRef("System.Int32"), 
    IsPublic: true, 
    IsFlags: false, 
  }, 
  {
    Nothing: 0, 
  }
);

/* class System.Xml.XmlWriter */ 

(function XmlWriter$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm_mscorlib.TypeRef("System.Object"), 
      Name: "System.Xml.XmlWriter", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Close", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:true , Public:true }, "Create", 
      new JSIL.MethodSignature($.Type, [$asm_mscorlib.TypeRef("System.IO.Stream")])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Dispose", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Dispose", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Flush", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_WriteState", 
      JSIL.MethodSignature.Return($asm_CSharpXamlForHtml5_System_Xml_dll.TypeRef("System.Xml.WriteState"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "LookupPrefix", 
      new JSIL.MethodSignature($.String, [$.String])
    );

    $.ExternalMethod({Static:false, Public:true }, "WriteAttributeString", 
      new JSIL.MethodSignature(null, [$.String, $.String])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "WriteBase64", 
      new JSIL.MethodSignature(null, [
          $jsilcore.TypeRef("System.Array", [$.Byte]), $.Int32, 
          $.Int32
        ])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "WriteCData", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "WriteCharEntity", 
      JSIL.MethodSignature.Action($.Char)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "WriteChars", 
      new JSIL.MethodSignature(null, [
          $jsilcore.TypeRef("System.Array", [$.Char]), $.Int32, 
          $.Int32
        ])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "WriteComment", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "WriteDocType", 
      new JSIL.MethodSignature(null, [
          $.String, $.String, 
          $.String, $.String
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "WriteElementString", 
      new JSIL.MethodSignature(null, [$.String, $.String])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "WriteEndAttribute", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "WriteEndDocument", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "WriteEndElement", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "WriteEntityRef", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "WriteFullEndElement", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "WriteProcessingInstruction", 
      new JSIL.MethodSignature(null, [$.String, $.String])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "WriteRaw", 
      new JSIL.MethodSignature(null, [
          $jsilcore.TypeRef("System.Array", [$.Char]), $.Int32, 
          $.Int32
        ])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "WriteRaw", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "WriteStartAttribute", 
      new JSIL.MethodSignature(null, [
          $.String, $.String, 
          $.String
        ])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "WriteStartDocument", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "WriteStartDocument", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "WriteStartElement", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "WriteStartElement", 
      new JSIL.MethodSignature(null, [$.String, $.String])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "WriteStartElement", 
      new JSIL.MethodSignature(null, [
          $.String, $.String, 
          $.String
        ])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "WriteString", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "WriteSurrogateCharEntity", 
      new JSIL.MethodSignature(null, [$.Char, $.Char])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "WriteWhitespace", 
      JSIL.MethodSignature.Action($.String)
    );

    $.Property({Static:false, Public:true , Virtual:true }, "WriteState", $asm_CSharpXamlForHtml5_System_Xml_dll.TypeRef("System.Xml.WriteState"));

    $.ImplementInterfaces(
      /* 0 */ $asm_mscorlib.TypeRef("System.IDisposable")
    );

    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm_JSIL_Meta.TypeRef("JSIL.Meta.JSStubOnly"));

})();

